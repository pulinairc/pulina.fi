!function(n){var e={};function t(a){if(e[a])return e[a].exports;var i=e[a]={i:a,l:!1,exports:{}};return n[a].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=n,t.c=e,t.d=function(n,e,a){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:a})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var i in n)t.d(a,i,function(e){return n[e]}.bind(null,i));return a},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=1)}({"../hc-offcanvas-nav/node_modules/@babel/runtime/helpers/typeof.js":function(module,exports){eval('function _typeof(obj) {\n  "@babel/helpers - typeof";\n\n  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\n\n//# sourceURL=webpack:///../hc-offcanvas-nav/node_modules/@babel/runtime/helpers/typeof.js?')},"../hc-offcanvas-nav/src/js/hc-offcanvas-nav.helpers.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"../hc-offcanvas-nav/node_modules/@babel/runtime/helpers/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);\n\n\n(function (window) {\n  'use strict';\n\n  var hcOffcanvasNav = window.hcOffcanvasNav;\n  var document = window.document;\n\n  if (typeof Object.assign !== 'function') {\n    Object.defineProperty(Object, 'assign', {\n      value: function assign(target, varArgs) {\n        'use strict';\n\n        if (target == null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource != null) {\n            for (var nextKey in nextSource) {\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n\n        return to;\n      },\n      writable: true,\n      configurable: true\n    });\n  }\n\n  if (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n      var el = this;\n\n      do {\n        if (Element.prototype.matches.call(el, s)) return el;\n        el = el.parentElement || el.parentNode;\n      } while (el !== null && el.nodeType === 1);\n\n      return null;\n    };\n  }\n\n  if (!Array.prototype.flat) {\n    Object.defineProperty(Array.prototype, 'flat', {\n      configurable: true,\n      value: function flat() {\n        var depth = isNaN(arguments[0]) ? 1 : Number(arguments[0]);\n        return depth ? Array.prototype.reduce.call(this, function (acc, cur) {\n          if (Array.isArray(cur)) {\n            acc.push.apply(acc, flat.call(cur, depth - 1));\n          } else {\n            acc.push(cur);\n          }\n\n          return acc;\n        }, []) : Array.prototype.slice.call(this);\n      },\n      writable: true\n    });\n  }\n\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  var supportsPassive = false;\n\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supportsPassive = {\n          passive: false\n        };\n      }\n    });\n    window.addEventListener('testPassive', null, opts);\n    window.removeEventListener('testPassive', null, opts);\n  } catch (e) {}\n\n  var isIos = function () {\n    return (/iPad|iPhone|iPod/.test(navigator.userAgent) || !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform)) && !window.MSStream;\n  }();\n\n  var isTouchDevice = function () {\n    return 'ontouchstart' in window || navigator.maxTouchPoints || window.DocumentTouch && document instanceof DocumentTouch;\n  }();\n\n  var isNumeric = function isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  var formatSizeVal = function formatSizeVal(n) {\n    return n === 'auto' ? '100%' : isNumeric(n) && n !== 0 ? \"\".concat(n, \"px\") : n;\n  };\n\n  var toMs = function toMs(s) {\n    return parseFloat(s) * (/\\ds$/.test(s) ? 1000 : 1);\n  };\n\n  var stopPropagation = function stopPropagation(e) {\n    return e.stopPropagation();\n  };\n\n  var preventDefault = function preventDefault(e) {\n    return e.preventDefault();\n  };\n\n  var preventClick = function preventClick(cb) {\n    return function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      if (typeof cb === 'function') cb();\n    };\n  };\n\n  var browserPrefix = function browserPrefix(prop) {\n    var prefixes = ['Webkit', 'Moz', 'Ms', 'O'];\n    var thisBody = document.body || document.documentElement;\n    var thisStyle = thisBody.style;\n    var Prop = prop.charAt(0).toUpperCase() + prop.slice(1);\n\n    if (typeof thisStyle[prop] !== 'undefined') {\n      return prop;\n    }\n\n    for (var i = 0; i < prefixes.length; i++) {\n      if (typeof thisStyle[prefixes[i] + Prop] !== 'undefined') {\n        return prefixes[i] + Prop;\n      }\n    }\n\n    return false;\n  };\n\n  var children = function children(el, selector) {\n    if (el instanceof Element) {\n      return selector ? Array.prototype.filter.call(el.children, function (child) {\n        return child.matches(selector);\n      }) : el.children;\n    } else {\n      var _children = [];\n      Array.prototype.forEach.call(el, function (n) {\n        _children = selector ? _children.concat(Array.prototype.filter.call(n.children, function (child) {\n          return child.matches(selector);\n        })) : _children.concat(Array.prototype.slice.call(n.children));\n      });\n      return _children;\n    }\n  };\n\n  var wrap = function wrap(el, wrapper) {\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n  };\n\n  var data = function data(el, prop, val) {\n    el.hcOffcanvasNav = el.hcOffcanvasNav || {};\n\n    if (typeof val !== 'undefined') {\n      el.hcOffcanvasNav[prop] = val;\n    } else {\n      return el.hcOffcanvasNav[prop];\n    }\n  };\n\n  var clone = function clone(el, withEvents, deepWithEvents) {\n    var cloned = el.cloneNode(deepWithEvents || false);\n    var srcElements = el instanceof Element ? [el].concat(Array.prototype.slice.call(el.getElementsByTagName('*'))) : [];\n    var destElements = cloned instanceof Element ? [cloned].concat(Array.prototype.slice.call(cloned.getElementsByTagName('*'))) : [];\n\n    var cloneCopyEvent = function cloneCopyEvent(src, dest) {\n      for (var s = 0; s < src.length; s++) {\n        if (src[s]._eventListeners) {\n          for (var type in src[s]._eventListeners) {\n            for (var i = 0; i < src[s]._eventListeners[type].length; i++) {\n              dest[i].addEventListener(type, src[s]._eventListeners[type][i].fn, src[s]._eventListeners[type][i].options);\n            }\n          }\n        }\n      }\n    };\n\n    if (!withEvents) {\n      srcElements.shift();\n      destElements.shift();\n    }\n\n    if (deepWithEvents) {\n      cloneCopyEvent(srcElements, destElements);\n    }\n\n    return cloned;\n  };\n\n  var customEventObject = function customEventObject(type, target, currentTarget, args) {\n    function Event(type) {\n      this.bubbles = false;\n      this.cancelable = false;\n      this.composed = false;\n      this.currentTarget = currentTarget;\n      this.data = args ? {} : null;\n      this.defaultPrevented = false;\n      this.eventPhase = 0;\n      this.isTrusted = false;\n      this.target = target;\n      this.timeStamp = Date.now();\n      this.type = type;\n\n      for (var prop in args) {\n        this.data[prop] = args[prop];\n      }\n    }\n\n    return new Event(type);\n  };\n\n  var hasListener = function hasListener(el, type) {\n    return (type ? (el._eventListeners || {})[type] : el._eventListeners) || false;\n  };\n\n  var addRemoveListener = function addRemoveListener(op) {\n    var f = Node.prototype[op + 'EventListener'];\n    return function (name, cb, opts) {\n      if (!this) return;\n      var eventName = name.split('.')[0];\n      this._eventListeners = this._eventListeners || {};\n\n      if (op === 'add') {\n        this._eventListeners[name] = this._eventListeners[name] || [];\n        var lstn = {\n          fn: cb\n        };\n\n        if (opts) {\n          lstn.options = opts;\n        }\n\n        this._eventListeners[name].push(lstn); // call native addEventListener\n\n\n        f.call(this, eventName, cb, opts);\n      } else {\n        // remove single event listener\n        if (typeof cb === 'function') {\n          // call native addEventListener\n          f.call(this, eventName, cb, opts);\n\n          for (var e in this._eventListeners) {\n            this._eventListeners[e] = this._eventListeners[e].filter(function (l) {\n              return l.fn !== cb;\n            });\n\n            if (!this._eventListeners[e].length) {\n              delete this._eventListeners[e];\n            }\n          }\n        } else {\n          // remove all event listeners\n          if (this._eventListeners[name]) {\n            for (var i = this._eventListeners[name].length; i--;) {\n              // call native addEventListener\n              f.call(this, eventName, this._eventListeners[name][i].fn, this._eventListeners[name][i].options);\n\n              this._eventListeners[name].splice(i, 1);\n            }\n\n            if (!this._eventListeners[name].length) {\n              delete this._eventListeners[name];\n            }\n          }\n        }\n      }\n\n      return;\n    };\n  };\n\n  Node.prototype.addEventListener = addRemoveListener('add');\n  Node.prototype.removeEventListener = addRemoveListener('remove');\n\n  var debounce = function debounce(func, wait, immediate) {\n    var timeout;\n    return function () {\n      var context = this;\n      var args = arguments;\n\n      var later = function later() {\n        timeout = null;\n\n        if (!immediate) {\n          func.apply(context, args);\n        }\n      };\n\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n\n      if (callNow) {\n        func.apply(context, args);\n      }\n    };\n  };\n\n  var createElement = function createElement(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var content = arguments.length > 2 ? arguments[2] : undefined;\n    var el = document.createElement(tag);\n\n    for (var p in props) {\n      if (p !== 'class') {\n        if (!(!props[p] && props[p] !== 0)) {\n          el.setAttribute(p, props[p]);\n        }\n      } else {\n        el.className = props[p];\n      }\n    }\n\n    if (content) {\n      if (!Array.isArray(content)) {\n        content = [content];\n      }\n\n      for (var i = 0; i < content.length; i++) {\n        if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(content[i]) === 'object' && content[i].length && !content[i].nodeType) {\n          for (var l = 0; l < content[i].length; l++) {\n            el.appendChild(content[i][l]);\n          }\n        } else {\n          el.appendChild(typeof content[i] === 'string' ? document.createTextNode(content[i]) : content[i]);\n        }\n      }\n    }\n\n    return el;\n  };\n\n  var getElements = function getElements(el) {\n    var node = null;\n\n    if (typeof el === 'string') {\n      node = document.querySelectorAll(el);\n    } else if (window.jQuery && el instanceof window.jQuery && el.length) {\n      node = el.toArray();\n    } else if (el instanceof Element) {\n      node = [el];\n    }\n\n    return node;\n  };\n\n  var getElementCssTag = function getElementCssTag(el) {\n    return typeof el === 'string' ? el : el.getAttribute('id') ? \"#\".concat(el.getAttribute('id')) : el.getAttribute('class') ? el.tagName.toLowerCase() + '.' + el.getAttribute('class').replace(/\\s+/g, '.') : getElementCssTag(el.parentNode) + ' > ' + el.tagName.toLowerCase();\n  };\n\n  var printStyle = function printStyle(id) {\n    var $style = createElement('style', {\n      id: id\n    });\n    var rules = {};\n    var media = {};\n    document.head.appendChild($style);\n\n    var parseRules = function parseRules(text) {\n      if (text.substr(-1) !== ';') {\n        text += text.substr(-1) !== ';' ? ';' : '';\n      }\n\n      return text;\n    };\n\n    return {\n      reset: function reset() {\n        rules = {};\n        media = {};\n      },\n      add: function add(selector, declarations, query) {\n        selector = selector.trim();\n        declarations = declarations.trim();\n\n        if (query) {\n          query = query.trim();\n          media[query] = media[query] || {};\n          media[query][selector] = parseRules(declarations);\n        } else {\n          rules[selector] = parseRules(declarations);\n        }\n      },\n      remove: function remove(selector, query) {\n        selector = selector.trim();\n\n        if (query) {\n          query = query.trim();\n\n          if (typeof media[query][selector] !== 'undefined') {\n            delete media[query][selector];\n          }\n        } else {\n          if (typeof rules[selector] !== 'undefined') {\n            delete rules[selector];\n          }\n        }\n      },\n      insert: function insert() {\n        var cssText = '';\n\n        for (var breakpoint in media) {\n          cssText += \"@media screen and (\".concat(breakpoint, \") {\\n\");\n\n          for (var key in media[breakpoint]) {\n            cssText += \"  \".concat(key, \" { \").concat(media[breakpoint][key], \" }\\n\");\n          }\n\n          cssText += '}\\n';\n        }\n\n        for (var _key in rules) {\n          cssText += \"\".concat(_key, \" { \").concat(rules[_key], \" }\\n\");\n        }\n\n        $style.innerHTML = cssText;\n      }\n    };\n  };\n\n  var insertAt = function insertAt($insert, n, $parent) {\n    var $children = children($parent);\n    var count = $children.length;\n    n = n === 'first' ? 0 : n;\n    n = n === 'last' ? count : n;\n    var i = n > -1 ? Math.max(0, Math.min(n, count)) : Math.max(0, Math.min(count + n, count));\n\n    if (i === 0) {\n      $parent[0].insertBefore($insert, $parent[0].firstChild);\n    } else {\n      $children[i - 1].insertAdjacentElement('afterend', $insert);\n    }\n  };\n\n  var getAxis = function getAxis(position) {\n    return ['left', 'right'].indexOf(position) !== -1 ? 'x' : 'y';\n  };\n\n  var setTransform = function () {\n    var transform = browserPrefix('transform');\n    return function ($el, val, position) {\n      if (val === false || val === '') {\n        $el.style.transform = '';\n      } else {\n        if (getAxis(position) === 'x') {\n          var x = position === 'left' ? val : '-' + val;\n          $el.style.transform = \"translate3d(\".concat(formatSizeVal(x), \",0,0)\");\n        } else {\n          var y = position === 'top' ? val : '-' + val;\n          $el.style.transform = \"translate3d(0,\".concat(formatSizeVal(y), \",0)\");\n        }\n      }\n    };\n  }();\n\n  var deprecated = function () {\n    var pluginName = 'HC Off-canvas Nav';\n    return function (what, instead, type) {\n      console.warn('%c' + pluginName + ':' + '%c ' + type + \"%c '\" + what + \"'\" + '%c is now deprecated and will be removed in the future. Use' + \"%c '\" + instead + \"'\" + '%c option instead. See details about plugin usage at https://github.com/somewebmedia/hc-offcanvas-nav.', 'color: #fa253b', 'color: default', 'color: #5595c6', 'color: default', 'color: #5595c6', 'color: default');\n    };\n  }();\n\n  hcOffcanvasNav.Helpers = {\n    supportsPassive: supportsPassive,\n    isIos: isIos,\n    isTouchDevice: isTouchDevice,\n    isNumeric: isNumeric,\n    formatSizeVal: formatSizeVal,\n    toMs: toMs,\n    stopPropagation: stopPropagation,\n    preventDefault: preventDefault,\n    preventClick: preventClick,\n    browserPrefix: browserPrefix,\n    children: children,\n    wrap: wrap,\n    data: data,\n    clone: clone,\n    customEventObject: customEventObject,\n    hasListener: hasListener,\n    debounce: debounce,\n    createElement: createElement,\n    getElements: getElements,\n    getElementCssTag: getElementCssTag,\n    printStyle: printStyle,\n    insertAt: insertAt,\n    getAxis: getAxis,\n    setTransform: setTransform,\n    deprecated: deprecated\n  };\n})(window);\n\n//# sourceURL=webpack:///../hc-offcanvas-nav/src/js/hc-offcanvas-nav.helpers.js?")},"../hc-offcanvas-nav/src/js/hc-offcanvas-nav.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"../hc-offcanvas-nav/node_modules/@babel/runtime/helpers/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);\n/*\n * HC Off-canvas Nav\n * ===================\n * Version: 6.1.2\n * Author: Some Web Media\n * Author URL: https://github.com/somewebmedia/\n * Plugin URL: https://github.com/somewebmedia/hc-offcanvas-nav\n * Description: JavaScript library for creating off-canvas multi-level navigations\n * License: MIT\n */\n\n\n\n\n(function (global, factory) {\n  if (( false ? undefined : _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(module)) === 'object' && _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(module.exports) === 'object') {\n    if (global.document) {\n      module.exports = factory(global);\n    } else {\n      throw new Error('HC Off-canvas Nav requires a browser to run.');\n    }\n  } else if (typeof define === 'function' && __webpack_require__(/*! !webpack amd options */ \"./node_modules/webpack/buildin/amd-options.js\")) {\n    define('hcOffcanvasNav', [], factory(global));\n  } else {\n    factory(global);\n  }\n})(typeof window !== 'undefined' ? window : undefined, function (window) {\n  var document = window.document;\n  var html = document.getElementsByTagName('html')[0];\n  var navCount = 0;\n  var navOpenClass = 'nav-open';\n\n  var _hcOffcanvasNav = function HcOffcanvasNav(elem, options) {\n    options = options || {}; // use querySelector if string is passed\n\n    if (typeof elem === 'string') {\n      elem = elem.charAt(0) === '#' && elem.indexOf(' ') === -1 ? document.querySelector(elem) : document.querySelectorAll(elem);\n    } // check if element exist\n\n\n    if (!elem) return false;\n    var Helpers = _hcOffcanvasNav.Helpers;\n    var defaults = {\n      width: 280,\n      height: 'auto',\n      disableAt: false,\n      pushContent: null,\n      swipeGestures: true,\n      expanded: false,\n      position: 'left',\n      // left, right, top, bottom\n      levelOpen: 'overlap',\n      // overlap, expand, none/false\n      levelSpacing: 40,\n      levelTitles: true,\n      closeOpenLevels: true,\n      closeActiveLevel: false,\n      navTitle: null,\n      navClass: '',\n      disableBody: true,\n      closeOnClick: true,\n      customToggle: null,\n      activeToggleClass: null,\n      bodyInsert: 'prepend',\n      // prepend/append\n      keepClasses: true,\n      removeOriginalNav: false,\n      rtl: false,\n      insertClose: true,\n      insertBack: true,\n      levelTitleAsBack: true,\n      labelClose: '',\n      labelBack: 'Back'\n    }; // show deprecated messages\n\n    if (typeof options.maxWidth !== 'undefined') {\n      Helpers.deprecated('maxWidth', 'disableAt', 'option');\n      options.disableAt = options.maxWidth;\n    }\n\n    var Settings = Object.assign({}, defaults, options);\n    Settings.ariaLabels = Object.assign({}, {\n      open: 'Open Menu',\n      close: 'Close Menu',\n      submenu: 'Submenu'\n    }, options.ariaLabels);\n    var UpdatedSettings = [];\n\n    var checkForUpdate = function checkForUpdate(options) {\n      if (!UpdatedSettings.length) {\n        return false;\n      }\n\n      var hasUpdated = false;\n\n      if (typeof options === 'string') {\n        options = [options];\n      }\n\n      var l = options.length;\n\n      for (var i = 0; i < l; i++) {\n        if (UpdatedSettings.indexOf(options[i]) !== -1) {\n          hasUpdated = true;\n        }\n      }\n\n      return hasUpdated;\n    };\n\n    var Plugin = function Plugin($originalNav) {\n      if (!$originalNav.querySelector('ul') && $originalNav.tagName !== 'UL') {\n        console.error('%c! HC Offcanvas Nav:' + \"%c Navigation must contain <ul> element.\", 'color: #fa253b', 'color: default');\n        return;\n      } // count our nav\n\n\n      navCount++;\n      var navUniqId = \"hc-nav-\".concat(navCount);\n      var Styles = Helpers.printStyle(\"hc-offcanvas-\".concat(navCount, \"-style\"));\n      var keydownEventName = 'keydown.hcOffcanvasNav';\n      var activeToggleClass = Settings.activeToggleClass || 'toggle-open'; // this is our new nav element\n\n      var $nav = Helpers.createElement('nav', {\n        id: navUniqId\n      });\n      var $nav_container = Helpers.createElement('div', {\n        \"class\": 'nav-container'\n      });\n      $nav.addEventListener('click', Helpers.stopPropagation);\n      $nav.appendChild($nav_container);\n      var $toggle = null;\n      var $toggle_open = null;\n      var $push_content = null;\n      var Model = {};\n      var _open = false; // is nav currently open\n\n      var _initExpanded = false; // should nav be opened on init\n\n      var _nextActiveLevel = null; // level that should be open next\n\n      var _top = 0; // to remember scroll position\n\n      var _containerWidth = 0;\n      var _containerHeight = 0;\n\n      var _transitionProperty;\n\n      var _transitionDuration;\n\n      var _transitionFunction;\n\n      var _closeLevelsTimeout = null;\n      var _indexes = {}; // object with level indexes\n\n      var _openLevels = []; // array with current open levels ids\n\n      var _keyboard = false;\n      var _focusEls = []; // array to store keyboard accessed items\n\n      var _xStart = null; // the X touch point\n\n      var _yStart = null; // the Y touch point\n\n      var _touchMoved = false;\n      var _touchNavTriggered = false;\n\n      if (!Settings.customToggle) {\n        // our toggle\n        $toggle = [Helpers.createElement('a', {\n          href: '#'\n        }, Helpers.createElement('span'))];\n        $originalNav.insertAdjacentElement('afterend', $toggle[0]);\n      } else {\n        // user toggle\n        $toggle = Helpers.getElements(Settings.customToggle);\n      }\n\n      if ($toggle && $toggle.length) {\n        $toggle.forEach(function ($t) {\n          $t.addEventListener('click', toggleNav($t));\n          $t.classList.add('hc-nav-trigger', navUniqId); // ARIA\n\n          $t.setAttribute('role', 'button');\n          $t.setAttribute('aria-label', (Settings.ariaLabels || {}).open);\n          $t.setAttribute('aria-controls', navUniqId);\n          $t.setAttribute('aria-expanded', false); // make nav opening keyboard accessible\n\n          $t.addEventListener('keydown', function (e) {\n            if (e.key === 'Enter' || e.keyCode === 13) {\n              // trap focus inside nav\n              setTimeout(function () {\n                trapFocus(0, 0);\n              }, 0);\n            }\n          });\n        });\n      }\n      /* ARIA Keyboard Focus */\n\n\n      var trapFocus = function trapFocus(n, l, i) {\n        if (typeof l !== 'number' || typeof n !== 'number' && !_focusEls.length) {\n          return;\n        }\n\n        var focusableSelector = '[tabindex=\"0\"], a[href], button, textarea, input[type=\"text\"], input[type=\"radio\"], input[type=\"checkbox\"], select';\n        var $focusable = Array.prototype.filter.call($nav_container.querySelectorAll('.nav-wrapper'), function (el) {\n          return el.getAttribute('data-level') == l && (typeof i !== 'number' || typeof i === 'number' && el.getAttribute('data-index') == i);\n        })[0];\n        $focusable = Helpers.children($focusable, '.nav-content')[0];\n        $focusable = Helpers.children($focusable, 'ul');\n        $focusable = Helpers.children($focusable, 'li');\n        $focusable = Helpers.children($focusable, ':not(.nav-wrapper)');\n        $focusable = Array.prototype.map.call($focusable, function (el) {\n          return Array.prototype.slice.call(el.querySelectorAll(focusableSelector));\n        }).flat();\n        $focusable = Array.prototype.filter.call($focusable, function (el) {\n          return el.getAttribute('tabindex') !== '-1';\n        });\n\n        if (!$focusable) {\n          return;\n        } // so we can keep the outline\n\n\n        $nav.classList.add('user-is-tabbing');\n        var $first = $focusable[0];\n        var $last = $focusable[$focusable.length - 1];\n\n        if (typeof n === 'number') {\n          // put focus on item with desired index\n          $focusable[n].focus();\n        } else {\n          // focus last focusable element\n          _focusEls[_focusEls.length - 1].focus(); // remove last element from focusable array\n\n\n          _focusEls.pop();\n        } // remove previous keydown event\n\n\n        document.removeEventListener(keydownEventName);\n        document.addEventListener(keydownEventName, function (e) {\n          if (!(e.key === 'Tab' || e.keyCode === 9)) {\n            return;\n          }\n          /* shift + tab */\n\n\n          if (e.shiftKey) {\n            if (document.activeElement === $first) {\n              e.preventDefault();\n              $last.focus();\n            }\n          }\n          /* tab */\n          else {\n              if (document.activeElement === $last) {\n                e.preventDefault();\n                $first.focus();\n              }\n            }\n        });\n      };\n\n      var untrapFocus = function untrapFocus() {\n        document.removeEventListener(keydownEventName);\n\n        if ($toggle_open) {\n          setTimeout(function () {\n            $toggle_open.focus();\n          }, _transitionDuration);\n        }\n      };\n      /* Build methods */\n\n\n      var calcNav = function calcNav() {\n        // remove transition from the nav container so we can update the nav without flickering\n        $nav_container.style.transition = 'none'; // nav must be block so we can get rendered width\n\n        $nav.style.display = 'block';\n        var computedWidth = Helpers.formatSizeVal(_containerWidth = $nav_container.offsetWidth);\n        var computedHeight = Helpers.formatSizeVal(_containerHeight = $nav_container.offsetHeight); // fix 100% transform glitching\n\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-position-left .nav-container\"), \"transform: translate3d(-\".concat(computedWidth, \", 0, 0)\"));\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-position-right .nav-container\"), \"transform: translate3d(\".concat(computedWidth, \", 0, 0)\"));\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-position-top .nav-container\"), \"transform: translate3d(0, -\".concat(computedHeight, \", 0)\"));\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-position-bottom .nav-container\"), \"transform: translate3d(0, \".concat(computedHeight, \", 0)\"));\n        Styles.insert(); // clear our temp inline styles\n\n        $nav.style.display = '';\n        $nav_container.style.transition = '';\n        _transitionProperty = window.getComputedStyle($nav_container).transitionProperty;\n        _transitionDuration = Helpers.toMs(window.getComputedStyle($nav_container).transitionDuration);\n        _transitionFunction = window.getComputedStyle($nav_container).transitionTimingFunction;\n\n        if (Settings.pushContent && $push_content && _transitionProperty) {\n          Styles.add(Helpers.getElementCssTag($push_content), \"transition: \".concat(_transitionProperty, \" \").concat(_transitionDuration, \"ms \").concat(_transitionFunction));\n        }\n\n        Styles.insert();\n      }; // init function\n\n\n      var initNav = function initNav(reinit) {\n        var toggleDisplay = $toggle ? window.getComputedStyle($toggle[0]).display : false;\n        var mediaquery = Settings.disableAt ? \"max-width: \".concat(Settings.disableAt - 1, \"px\") : false;\n        var width = Helpers.formatSizeVal(Settings.width);\n        var height = Helpers.formatSizeVal(Settings.height);\n        var spacing = Helpers.formatSizeVal(Settings.levelSpacing);\n\n        if (Helpers.isNumeric(width) || width.indexOf('px') !== -1) {\n          _containerWidth = parseInt(width);\n        }\n\n        if (Helpers.isNumeric(height) || height.indexOf('px') !== -1) {\n          _containerHeight = parseInt(height);\n        }\n\n        if (checkForUpdate(['disableAt', 'position'])) {\n          // clear media queries from previous run\n          Styles.reset();\n        } // create styles\n\n\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId), 'display: block', mediaquery); // hide original\n\n        Styles.add(\".hc-nav-original.\".concat(navUniqId), 'display: none', mediaquery); // trigger\n\n        if (toggleDisplay) {\n          Styles.add(\".hc-nav-trigger.\".concat(navUniqId), \"display: \".concat(toggleDisplay && toggleDisplay !== 'none' ? toggleDisplay : 'block'), mediaquery);\n        }\n\n        if (['left', 'right'].indexOf(Settings.position) !== -1) {\n          // container width\n          Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \" .nav-container\"), \"width: \".concat(width));\n        } else {\n          // container height\n          Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \" .nav-container\"), \"height: \".concat(height));\n        } // container transform\n\n\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-position-left .nav-container\"), \"transform: translate3d(-\".concat(width, \", 0, 0);\"));\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-position-right .nav-container\"), \"transform: translate3d(\".concat(width, \", 0, 0);\"));\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-position-top .nav-container\"), \"transform: translate3d(0, -\".concat(height, \", 0);\"));\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-position-bottom .nav-container\"), \"transform: translate3d(0, \".concat(height, \", 0);\")); // wrappers\n\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-levels-overlap.nav-position-left li.level-open > .nav-wrapper\"), \"transform: translate3d(-\".concat(spacing, \", 0, 0)\"), mediaquery);\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-levels-overlap.nav-position-right li.level-open > .nav-wrapper\"), \"transform: translate3d(\".concat(spacing, \", 0, 0)\"), mediaquery);\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-levels-overlap.nav-position-top li.level-open > .nav-wrapper\"), \"transform: translate3d(0, -\".concat(spacing, \", 0)\"), mediaquery);\n        Styles.add(\".hc-offcanvas-nav.\".concat(navUniqId, \".nav-levels-overlap.nav-position-bottom li.level-open > .nav-wrapper\"), \"transform: translate3d(0, \".concat(spacing, \", 0)\"), mediaquery);\n        Styles.insert(); // get page content\n\n        if (!reinit || reinit && checkForUpdate('pushContent')) {\n          $push_content = Settings.pushContent ? Helpers.getElements(Settings.pushContent)[0] : null;\n        } // remove transition from the nav container so we can update the nav without flickering\n\n\n        $nav_container.style.transition = 'none';\n        var wasOpen = $nav.classList.contains(navOpenClass);\n        var navClasses = ['hc-offcanvas-nav', Settings.navClass || '', navUniqId, 'nav-levels-' + (Settings.levelOpen || 'none'), \"nav-position-\".concat(Settings.position), Settings.disableBody ? 'disable-body' : '', Helpers.isIos ? 'is-ios' : '', Helpers.isTouchDevice ? 'touch-device' : '', wasOpen ? navOpenClass : '', Settings.rtl ? 'rtl' : '', Settings.insertClose === true && !Settings.labelClose ? 'nav-close-button-empty' : ''].join(' ').trim().replace(/  +/g, ' ');\n        $nav.removeEventListener('click');\n        $nav.className = navClasses;\n        $nav.setAttribute('aria-hidden', true); // set css variable so we can use it in themes if needed\n\n        document.documentElement.style.setProperty('--nav-level-spacing', Settings.levelSpacing + 'px'); // close menu on body click (nav::after)\n\n        if (Settings.disableBody) {\n          $nav.addEventListener('click', closeNav);\n        }\n\n        if (reinit) {\n          calcNav();\n        } else {\n          // timed out so we can get computed data\n          setTimeout(calcNav, 0);\n        }\n      }; // create nav model function\n\n\n      var createModel = function createModel() {\n        // get first level menus\n        var $first_level = function $first_level() {\n          return $originalNav.tagName === 'UL' ? [$originalNav] : Array.prototype.filter.call($originalNav.children, function (child) {\n            return child.tagName === 'UL' || child instanceof HTMLHeadingElement;\n          });\n        }; // call\n\n\n        Model = getModel($first_level(), null);\n\n        function getModel($menu, id) {\n          var level = [];\n          Array.prototype.forEach.call($menu, function ($ul) {\n            if ($ul.tagName !== 'UL' && !($ul instanceof HTMLHeadingElement)) {\n              return;\n            }\n\n            var nav = {\n              tagName: $ul.tagName,\n              id: id,\n              htmlClass: $ul.getAttribute('class') || null,\n              items: []\n            };\n\n            if ($ul instanceof HTMLHeadingElement) {\n              // this is a heading\n              nav.content = Helpers.clone($ul, false, true);\n            } else {\n              // this submenu should be open next\n              if ($ul.getAttribute('data-nav-active') !== null) {\n                _nextActiveLevel = id; // remove data attribute\n\n                $ul.removeAttribute('data-nav-active');\n              }\n\n              Array.prototype.forEach.call($ul.children, function ($li) {\n                var customContent = $li.getAttribute('data-nav-custom-content') !== null;\n                var $content = customContent ? $li.children : Array.prototype.filter.call($li.children, function (child) {\n                  return child.tagName !== 'UL' && !child.querySelector('ul');\n                }).concat($li.children.length ? [] : [$li.firstChild]);\n                var $nested_navs = customContent ? [] : Array.prototype.slice.call($li.querySelectorAll('ul'));\n                var $subnav = !$nested_navs.length ? [] : [].concat(Array.prototype.filter.call($nested_navs[0].parentNode.children, function (child) {\n                  return child.tagName === 'UL' || child instanceof HTMLHeadingElement;\n                }));\n                var uniqid = null; // if no content check for text\n\n                if (!$content.length) {\n                  var text = '';\n\n                  for (var i = 0; i < $li.childNodes.length; i++) {\n                    if ($li.childNodes[i].nodeType === Node.TEXT_NODE) {\n                      text += $li.childNodes[i].textContent.trim();\n                    }\n                  }\n\n                  $content = [document.createTextNode(text)];\n                } // save unique identifier for remembering open sub menus\n\n\n                if ($subnav.length) {\n                  if (!Helpers.data($li, 'hc-uniqid')) {\n                    uniqid = Math.random().toString(36).substr(2);\n                    Helpers.data($li, 'hc-uniqid', uniqid);\n                  } else {\n                    uniqid = Helpers.data($li, 'hc-uniqid');\n                  }\n                } // submenu of this list element should be open next\n\n\n                if ($li.getAttribute('data-nav-active') !== null) {\n                  _nextActiveLevel = uniqid; // remove data attribute\n\n                  $li.removeAttribute('data-nav-active');\n                } // add elements to this level\n\n\n                nav.items.push({\n                  id: uniqid,\n                  htmlClass: $li.getAttribute('class') || '',\n                  content: $content,\n                  custom: customContent,\n                  subnav: $subnav.length ? getModel($subnav, uniqid) : [],\n                  highlight: $li.getAttribute('data-nav-highlight') !== null\n                });\n              });\n            }\n\n            level.push(nav);\n          });\n          return level;\n        }\n      }; // create nav DOM function\n\n\n      var createNavDom = function createNavDom(reinit) {\n        if (reinit) {\n          // empty the container\n          while ($nav_container.firstChild) {\n            $nav_container.removeChild($nav_container.firstChild);\n          } // reset indexes\n\n\n          _indexes = {};\n        } // call\n\n\n        createDom(Model, $nav_container, 0, Settings.navTitle);\n\n        function createDom(menu, $container, level, title, backIndex, backTitle) {\n          var $wrapper = Helpers.createElement('div', {\n            \"class\": \"nav-wrapper nav-wrapper-\".concat(level),\n            'data-level': level,\n            'data-index': backIndex || 0\n          });\n          var $content = Helpers.createElement('div', {\n            \"class\": 'nav-content'\n          });\n          $wrapper.addEventListener('click', Helpers.stopPropagation);\n          $wrapper.appendChild($content);\n          $container.appendChild($wrapper); // titles\n\n          if (title && (level === 0 || level > 0 && Settings.levelOpen === 'overlap')) {\n            var _title = typeof title === 'string' ? title : Helpers.clone(window.jQuery && title instanceof window.jQuery && title.length ? title[0] : title, true, true);\n\n            $content.insertBefore(Helpers.createElement('h2', {\n              id: level === 0 ? \"\".concat(navUniqId, \"-nav-title\") : null,\n              \"class\": level === 0 ? 'nav-title' : 'level-title'\n            }, _title), $content.firstChild); // Nav ARIA title\n\n            if (level === 0 && typeof title === 'string') {\n              $nav.setAttribute('aria-labelledby', \"\".concat(navUniqId, \"-nav-title\"));\n            }\n          }\n\n          var menu_count = -1;\n          menu.forEach(function (nav, i_nav) {\n            if (nav.tagName !== 'UL') {\n              $content.appendChild(nav.content);\n              return;\n            } else {\n              menu_count++;\n            }\n\n            var $menu = Helpers.createElement('ul', {\n              id: nav.id ? menu.length > 1 ? \"menu-\".concat(nav.id, \"-\").concat(menu_count) // sibling menus\n              : \"menu-\".concat(nav.id) : null,\n              role: 'menu',\n              'aria-level': level + 1\n            });\n            $content.appendChild($menu); // keep original menu classes\n\n            if (Settings.keepClasses && nav.htmlClass) {\n              $menu.classList.add.apply($menu.classList, nav.htmlClass.split(' '));\n            }\n\n            nav.items.forEach(function (item, i_item) {\n              var $item_content = item.content; // item has custom content\n\n              if (item.custom) {\n                var $custom_item = Helpers.createElement('li', {\n                  \"class\": 'nav-item nav-item-custom'\n                }, Helpers.createElement('div', {\n                  \"class\": 'nav-custom-content'\n                }, Array.prototype.map.call($item_content, function (el) {\n                  return Helpers.clone(el, true, true);\n                }))); // keep original menu item classes\n\n                if (Settings.keepClasses && item.htmlClass) {\n                  $custom_item.classList.add.apply($custom_item.classList, item.htmlClass.split(' '));\n                } // insert item\n\n\n                $menu.appendChild($custom_item); // stop here\n\n                return;\n              }\n\n              var $original_link = Array.prototype.filter.call($item_content, function (child) {\n                return child.tagName === 'A' || child.nodeType !== Node.TEXT_NODE && child.querySelector('a');\n              })[0];\n              var $item_link;\n\n              if ($original_link) {\n                $item_link = Helpers.clone($original_link, false, true);\n                $item_link.classList.add('nav-item-link');\n              } else {\n                $item_link = Helpers.createElement(item.subnav.length ? 'a' : 'span', {\n                  \"class\": 'nav-item-link'\n                }, Array.prototype.map.call($item_content, function (el) {\n                  return Helpers.clone(el, true, true);\n                }));\n              }\n\n              if ($item_link.tagName === 'A') {\n                $item_link.setAttribute('tabindex', '0');\n                $item_link.setAttribute('role', 'menuitem');\n\n                if (!$item_link.getAttribute('href')) {\n                  $item_link.setAttribute('href', '#');\n                }\n              }\n\n              if ($original_link) {\n                $item_link.addEventListener('click', function (e) {\n                  e.stopPropagation(); // trigger original click event\n\n                  if (Helpers.hasListener($original_link, 'click')) {\n                    $original_link.click();\n                  }\n                });\n              }\n\n              if ($item_link.getAttribute('href') === '#') {\n                // prevent page jumping\n                $item_link.addEventListener('click', Helpers.preventDefault);\n              } // close nav on item click\n\n\n              if (Settings.closeOnClick) {\n                if (!areLevelsOpenable()) {\n                  // every item should close the nav except disabled\n                  if ($item_link.tagName === 'A' && $item_link.dataset.navClose !== 'false' && ($item_link.getAttribute('disabled') === null || $item_link.getAttribute('disabled') === 'false')) {\n                    $item_link.addEventListener('click', closeNav);\n                  }\n                } else {\n                  // only items without submenus\n                  // or with submenus but with valid links\n                  if ($item_link.tagName === 'A' && $item_link.dataset.navClose !== 'false' && ($item_link.getAttribute('disabled') === null || $item_link.getAttribute('disabled') === 'false') && (!item.subnav.length || $item_link.getAttribute('href') && $item_link.getAttribute('href').charAt(0) !== '#')) {\n                    $item_link.addEventListener('click', closeNav);\n                  }\n                }\n              } // our nav item\n\n\n              var $item = Helpers.createElement('li', {\n                \"class\": 'nav-item'\n              });\n              $item.appendChild($item_link);\n              $menu.appendChild($item); // keep original menu item classes\n\n              if (Settings.keepClasses && item.htmlClass) {\n                $item.classList.add.apply($item.classList, item.htmlClass.split(' '));\n              } // is nav item highlighted?\n\n\n              if (item.highlight) {\n                $item.classList.add('nav-highlight');\n              } // wrap item link\n\n\n              Helpers.wrap($item_link, Helpers.createElement('div', {\n                \"class\": 'nav-item-wrapper'\n              })); // do subnav\n\n              if (item.subnav.length) {\n                var nextLevel = level + 1;\n                var uniqid = item.id;\n                var nav_title = ''; // create new level\n\n                if (!_indexes[nextLevel]) {\n                  _indexes[nextLevel] = 0;\n                } // li parent class\n\n\n                $item.classList.add('nav-parent');\n\n                if (!areLevelsOpenable()) {\n                  $item_link.setAttribute('aria-expanded', true);\n                } // if we can open levels\n                else {\n                    var index = _indexes[nextLevel];\n                    var $checkbox = Helpers.createElement('input', {\n                      type: 'checkbox',\n                      id: \"\".concat(navUniqId, \"-\").concat(nextLevel, \"-\").concat(index),\n                      \"class\": 'hc-chk',\n                      tabindex: -1,\n                      'data-level': nextLevel,\n                      'data-index': index,\n                      value: uniqid\n                    });\n                    $checkbox.addEventListener('click', Helpers.stopPropagation);\n                    $checkbox.addEventListener('change', checkboxChange);\n                    $item.insertBefore($checkbox, $item.firstChild);\n\n                    var attachToLink = function attachToLink($el) {\n                      $el.addEventListener('click', function (e) {\n                        e.stopPropagation(); // trigger checkbox to toggle level\n\n                        $checkbox.setAttribute('checked', $checkbox.getAttribute('checked') === 'true' ? false : true);\n\n                        if ('createEvent' in document) {\n                          var evt = document.createEvent('HTMLEvents');\n                          evt.initEvent('change', false, true);\n                          $checkbox.dispatchEvent(evt);\n                        }\n                      });\n                      $el.addEventListener('keydown', function (e) {\n                        if (e.key === 'Enter' || e.keyCode === 13) {\n                          // remember we are accessing via keyboard\n                          _keyboard = true;\n\n                          _focusEls.push(this);\n                        }\n                      }); // ARIA\n\n                      $el.setAttribute('aria-controls', item.subnav.length > 1 ? item.subnav.filter(function (s) {\n                        return s.tagName === 'UL';\n                      }).map(function (s, i) {\n                        return \"menu-\".concat(s.id, \"-\").concat(i);\n                      }).join(' ') // sibling menus\n                      : \"menu-\".concat(uniqid));\n                      $el.setAttribute('aria-haspopup', Settings.levelOpen === 'overlap');\n                      $el.setAttribute('aria-expanded', false);\n                    }; // nav is updated, we should keep this level open\n\n\n                    if (_openLevels.indexOf(uniqid) !== -1) {\n                      $wrapper.classList.add('sub-level-open');\n                      $wrapper.addEventListener('click', function () {\n                        return closeLevel(nextLevel, index);\n                      }); // close on self click\n\n                      $item.classList.add('level-open');\n                      $checkbox.setAttribute('checked', true);\n                    } // subnav title\n\n\n                    nav_title = Settings.levelTitles === true ? $item_content[0].textContent.trim() : ''; // item has no actual link\n\n                    if (!$item_link.getAttribute('href') || $item_link.getAttribute('href') === '#') {\n                      $item_link.appendChild(Helpers.createElement('span', {\n                        \"class\": 'nav-next'\n                      }, Helpers.createElement('span')));\n                      attachToLink($item_link);\n                    } // item has valid link, create our next link\n                    else {\n                        var $a_next = Helpers.createElement('a', {\n                          href: '#',\n                          \"class\": 'nav-next',\n                          'aria-label': \"\".concat((Settings.ariaLabels || {}).submenu, \": \").concat(nav_title),\n                          role: 'menuitem',\n                          tabindex: 0\n                        }, Helpers.createElement('span'));\n                        $a_next.addEventListener('click', Helpers.preventClick());\n                        attachToLink($a_next);\n\n                        if (Settings.rtl) {\n                          $item_link.parentNode.appendChild($a_next);\n                        } else {\n                          $item_link.parentNode.insertBefore($a_next, $item_link.nextSibling);\n                        }\n                      }\n                  }\n\n                _indexes[nextLevel]++;\n                createDom(item.subnav, $item, nextLevel, nav_title, _indexes[nextLevel] - 1, typeof title === 'string' ? title : '');\n              }\n            });\n          }); // insert back links\n\n          if (level && typeof backIndex !== 'undefined') {\n            if (Settings.insertBack !== false && Settings.levelOpen === 'overlap') {\n              var $children_menus = Helpers.children($content, 'ul');\n              var backLabel = (Settings.levelTitleAsBack ? backTitle || Settings.labelBack : Settings.labelBack) || '';\n              var $back_a = Helpers.createElement('a', {\n                href: '#',\n                \"class\": 'nav-back-button',\n                role: 'menuitem',\n                tabindex: 0\n              }, [backLabel, Helpers.createElement('span')]);\n\n              if (Settings.insertBack === true || Settings.insertBack === 0) {\n                var $back = Helpers.createElement('div', {\n                  \"class\": 'nav-back'\n                }, $back_a);\n                $content.insertBefore($back, Helpers.children($content, ':not(.level-title)')[0]);\n              } else {\n                var _$back = Helpers.createElement('li', {\n                  \"class\": 'nav-item nav-back'\n                }, $back_a);\n\n                Helpers.insertAt(_$back, Settings.insertBack === true ? 0 : Settings.insertBack, $children_menus);\n              }\n\n              var closeThisLevel = function closeThisLevel() {\n                return closeLevel(level, backIndex);\n              };\n\n              Helpers.wrap($back_a, Helpers.createElement('div', {\n                \"class\": 'nav-item-wrapper'\n              }));\n              $back_a.addEventListener('click', Helpers.preventClick(closeThisLevel));\n              $back_a.addEventListener('keydown', function (e) {\n                if (e.key === 'Enter' || e.keyCode === 13) {\n                  // remember we are accessing via keyboard\n                  _keyboard = true;\n                }\n              });\n            }\n          } // insert close button\n\n\n          if (level === 0 && Settings.insertClose !== false) {\n            var $close_a = Helpers.createElement('a', {\n              href: '#',\n              \"class\": 'nav-close-button' + (Settings.labelClose ? ' has-label' : ''),\n              role: 'menuitem',\n              tabindex: 0,\n              'aria-label': !Settings.labelClose ? (Settings.ariaLabels || {}).close : ''\n            }, [Settings.labelClose || '', Helpers.createElement('span')]);\n            $close_a.addEventListener('click', Helpers.preventClick(closeNav));\n            $close_a.addEventListener('keydown', function (e) {\n              if (e.key === 'Enter' || e.keyCode === 13) {\n                untrapFocus();\n              }\n            });\n\n            if (title && Settings.insertClose === true) {\n              // after nav title\n              $content.insertBefore(Helpers.createElement('div', {\n                \"class\": 'nav-close'\n              }, $close_a), $content.children[1]);\n            } else if (Settings.insertClose === true) {\n              // before nav content\n              $content.insertBefore(Helpers.createElement('div', {\n                \"class\": 'nav-close'\n              }, $close_a), $content.firstChild);\n            } else {\n              // as menu item\n              var $nav_ul = Helpers.children($content, 'ul');\n              var $close = Helpers.createElement('li', {\n                \"class\": 'nav-item nav-close'\n              }, $close_a);\n              Helpers.wrap($close_a, Helpers.createElement('div', {\n                \"class\": 'nav-item-wrapper'\n              }));\n              Helpers.insertAt($close, Settings.insertClose, $nav_ul);\n            }\n          }\n        }\n      };\n      /* Touch swipe gestures */\n\n\n      var touchStart = function touchStart(target) {\n        return function (e) {\n          if (Settings.position !== 'left' && Settings.position !== 'right') {\n            return;\n          }\n\n          _xStart = e.touches[0].clientX;\n          _yStart = e.touches[0].clientY; // temporary attach touch listeners\n\n          if (target === 'doc') {\n            if (!_touchNavTriggered) {\n              document.addEventListener('touchmove', touchMove_open, Helpers.supportsPassive);\n              document.addEventListener('touchend', touchEnd_open, Helpers.supportsPassive);\n            }\n          } else {\n            _touchNavTriggered = true;\n            $nav_container.addEventListener('touchmove', touchMove_close, Helpers.supportsPassive);\n            $nav_container.addEventListener('touchend', touchEnd_close, Helpers.supportsPassive);\n          }\n        };\n      };\n\n      var touchCaptureNav = function touchCaptureNav(transNav, transContent) {\n        window.addEventListener('touchmove', Helpers.preventDefault, Helpers.supportsPassive); // disable scroll\n\n        $nav.style.visibility = 'visible';\n        $nav_container.style[Helpers.browserPrefix('transition')] = 'none';\n        Helpers.setTransform($nav_container, transNav, Settings.position);\n\n        if ($push_content) {\n          $push_content.style[Helpers.browserPrefix('transition')] = 'none';\n          Helpers.setTransform($push_content, transContent, Settings.position);\n        }\n      };\n\n      var touchReleaseNav = function touchReleaseNav(action) {\n        var timeoutVsb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var transNav = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var transContent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        window.removeEventListener('touchmove', Helpers.preventDefault, Helpers.supportsPassive); // enable scroll\n\n        $nav_container.style[Helpers.browserPrefix('transition')] = '';\n        Helpers.setTransform($nav_container, transNav, Settings.position);\n\n        if ($push_content) {\n          $push_content.style[Helpers.browserPrefix('transition')] = '';\n          Helpers.setTransform($push_content, transContent, Settings.position);\n        }\n\n        if (action === 'open') {\n          openNav();\n        } else {\n          closeNav();\n\n          if (timeoutVsb) {\n            setTimeout(function () {\n              $nav.style.visibility = '';\n            }, _transitionDuration);\n          } else {\n            $nav.style.visibility = '';\n          }\n        }\n      };\n\n      var touchMove_open = function touchMove_open(e) {\n        var xDiff = 0 - (_xStart - e.touches[0].clientX);\n        var levelSpacing = Settings.levelOpen === 'overlap' ? activeLevel() * Settings.levelSpacing : 0;\n        var swipeWidth = _containerWidth + levelSpacing;\n        var maxStart = 50; // from the edge of the screen\n\n        if (Settings.position === 'left') {\n          xDiff = Math.min(Math.max(xDiff, 0), swipeWidth);\n        } else {\n          xDiff = Math.abs(Math.min(Math.max(xDiff, -swipeWidth), 0));\n        }\n\n        if (Settings.position === 'left' && _xStart < maxStart || // swipe right\n        Settings.position === 'right' && _xStart > document.clientWidth - maxStart // swipe left\n        ) {\n            _touchMoved = true;\n            touchCaptureNav(0 - (_containerWidth - xDiff), Math.abs(xDiff));\n          }\n      };\n\n      var touchEnd_open = function touchEnd_open(e) {\n        // remove touch listeners from document\n        document.removeEventListener('touchmove', touchMove_open);\n        document.removeEventListener('touchend', touchEnd_open);\n\n        if (!_touchMoved) {\n          return;\n        }\n\n        var lastTouch = e.changedTouches[e.changedTouches.length - 1];\n        var xDiff = 0 - (_xStart - lastTouch.clientX);\n        var levelSpacing = Settings.levelOpen === 'overlap' ? activeLevel() * Settings.levelSpacing : 0;\n        var swipeWidth = _containerWidth + levelSpacing;\n        var diffTrashold = 70; // swipe distance required\n\n        if (Settings.position === 'left') {\n          xDiff = Math.min(Math.max(xDiff, 0), swipeWidth);\n        } else {\n          xDiff = Math.abs(Math.min(Math.max(xDiff, -swipeWidth), 0));\n        }\n\n        if (!xDiff) {\n          touchReleaseNav('close', false);\n        } else if (xDiff > diffTrashold) {\n          touchReleaseNav('open');\n        } else {\n          touchReleaseNav('close');\n        } // reset touch\n\n\n        _xStart = null;\n        _yStart = null;\n        _touchMoved = false;\n      };\n\n      var touchMove_close = function touchMove_close(e) {\n        var xDiff = 0 - (_xStart - e.touches[0].clientX);\n        var yDiff = 0 - (_yStart - e.touches[0].clientY);\n\n        if (Math.abs(xDiff) < Math.abs(yDiff)) {\n          return;\n        }\n\n        var levelSpacing = Settings.levelOpen === 'overlap' ? activeLevel() * Settings.levelSpacing : 0;\n        var swipeWidth = _containerWidth + levelSpacing;\n\n        if (Settings.position === 'left') {\n          xDiff = Math.min(Math.max(xDiff, -swipeWidth), 0);\n        } else {\n          xDiff = Math.min(Math.max(xDiff, 0), swipeWidth);\n        }\n\n        if (Settings.position === 'left' && xDiff < 0 || // swipe right\n        Settings.position === 'right' && xDiff > 0 // swipe left\n        ) {\n            _touchMoved = true;\n            touchCaptureNav(-Math.abs(xDiff) + levelSpacing, swipeWidth - Math.abs(xDiff));\n          }\n      };\n\n      var touchEnd_close = function touchEnd_close(e) {\n        // remove touch listeners from nav\n        $nav_container.removeEventListener('touchmove', touchMove_close);\n        $nav_container.removeEventListener('touchend', touchEnd_close);\n        _touchNavTriggered = false;\n\n        if (!_touchMoved) {\n          return;\n        }\n\n        var lastTouch = e.changedTouches[e.changedTouches.length - 1];\n        var xDiff = 0 - (_xStart - lastTouch.clientX);\n        var levelSpacing = Settings.levelOpen === 'overlap' ? activeLevel() * Settings.levelSpacing : 0;\n        var swipeWidth = _containerWidth + levelSpacing;\n        var diffTrashold = 50;\n\n        if (Settings.position === 'left') {\n          xDiff = Math.abs(Math.min(Math.max(xDiff, -swipeWidth), 0));\n        } else {\n          xDiff = Math.abs(Math.min(Math.max(xDiff, 0), swipeWidth));\n        }\n\n        if (xDiff === swipeWidth) {\n          touchReleaseNav('close', false);\n        } else if (xDiff > diffTrashold) {\n          touchReleaseNav('close');\n        } else {\n          touchReleaseNav('open', true, levelSpacing, swipeWidth);\n        } // reset touch\n\n\n        _xStart = null;\n        _yStart = null;\n        _touchMoved = false;\n      };\n      /* Setup our nav */\n      // init nav\n\n\n      initNav(); // init our Model\n\n      createModel(); // create view from model\n\n      createNavDom(); // remove original nav\n\n      if (Settings.removeOriginalNav === true) {\n        $originalNav.parentNode.removeChild($originalNav);\n      } else {\n        // add classes to original menu so we know it's connected to our copy\n        $originalNav.classList.add('hc-nav-original', navUniqId);\n      } // insert nav to DOM\n\n\n      if (Settings.bodyInsert === 'prepend') {\n        document.body.insertBefore($nav, document.body.firstChild);\n      } else if (Settings.bodyInsert === 'append') {\n        document.body.appendChild($nav);\n      } // opened nav right away\n\n\n      if (Settings.expanded === true) {\n        _initExpanded = true; // set flag\n\n        openNav();\n      }\n\n      if (Settings.swipeGestures) {\n        // close touch event on nav swipe\n        // trigger before document touch\n        $nav_container.addEventListener('touchstart', touchStart('nav'), Helpers.supportsPassive); // open touch event on document swipe\n\n        document.addEventListener('touchstart', touchStart('doc'), Helpers.supportsPassive);\n      } // close levels on escape\n\n\n      document.addEventListener('keydown', checkEsc); // re-calculate our nav if window is resized\n\n      var debounceResize = Helpers.debounce(calcNav, 500);\n      window.addEventListener('resize', debounceResize, Helpers.supportsPassive);\n      /* Private methods */\n\n      function checkEsc(e) {\n        if (isOpen() && (e.key === 'Escape' || e.keyCode === 27)) {\n          var level = activeLevel();\n\n          if (level === 0) {\n            closeNav();\n            untrapFocus();\n          } else {\n            closeLevel(level, activeIndex());\n            trapFocus(null, level - 1);\n          }\n        }\n      }\n\n      ;\n\n      function checkboxChange() {\n        var l = Number(this.dataset.level);\n        var i = Number(this.dataset.index);\n\n        if (this.getAttribute('checked') === 'true') {\n          openLevel(l, i);\n        } else {\n          closeLevel(l, i);\n        }\n      }\n\n      function closeToggles($t) {\n        $t.classList.remove(activeToggleClass);\n        $t.setAttribute('aria-expanded', false);\n      }\n\n      ;\n\n      function areLevelsOpenable() {\n        return Settings.levelOpen !== false && Settings.levelOpen !== 'none';\n      }\n\n      function isOpen() {\n        return _open;\n      }\n\n      function activeLevel() {\n        return _openLevels.length ? Number(Array.prototype.filter.call($nav_container.querySelectorAll('.hc-chk'), function (el) {\n          return el.value == _openLevels[_openLevels.length - 1];\n        })[0].dataset.level) : 0;\n      }\n\n      function activeIndex() {\n        return _openLevels.length ? Number(Array.prototype.filter.call($nav_container.querySelectorAll('.hc-chk'), function (el) {\n          return el.value == _openLevels[_openLevels.length - 1];\n        })[0].dataset.index) : 0;\n      }\n\n      function openNav(l, i) {\n        // check if already open\n        if (isOpen() && typeof i === 'undefined') {\n          return;\n        } // open main nav\n\n\n        _openNav();\n\n        if (!areLevelsOpenable()) {\n          return;\n        }\n\n        var $checkbox;\n\n        if ((typeof l === 'number' || Helpers.isNumeric(l)) && (typeof i === 'number' || Helpers.isNumeric(i))) {\n          $checkbox = document.querySelector(\"#\".concat(navUniqId, \"-\").concat(l, \"-\").concat(i));\n\n          if (!$checkbox) {\n            console.warn(\"HC Offcanvas Nav: level \".concat(l, \" doesn't have index \").concat(i));\n            return;\n          }\n        } else if (_nextActiveLevel) {\n          // get level to open from [data-nav-active]\n          $checkbox = Array.prototype.filter.call($nav_container.querySelectorAll('.hc-chk'), function (el) {\n            return el.value == _nextActiveLevel;\n          })[0]; // reset flag\n\n          if (Settings.closeActiveLevel || !Settings.closeOpenLevels) {\n            _nextActiveLevel = null;\n          }\n        } else if (Settings.closeOpenLevels === false) {\n          // get last checked level\n          $checkbox = Array.prototype.filter.call($nav_container.querySelectorAll('.hc-chk'), function (el) {\n            return el.getAttribute('checked') === 'true';\n          });\n          $checkbox = $checkbox[$checkbox.length - 1];\n        } // open sub levels as well\n\n\n        if ($checkbox) {\n          var levels = [];\n          l = Number($checkbox.dataset.level);\n          i = Number($checkbox.dataset.index);\n\n          if (l > 1) {\n            var $parents = [];\n\n            for (; $checkbox && $checkbox !== document; $checkbox = $checkbox.parentNode) {\n              if ($checkbox.matches('.nav-wrapper')) {\n                $parents.push($checkbox);\n              }\n\n              continue;\n            } // get parent levels to open\n\n\n            for (var _i = 0; _i < $parents.length; _i++) {\n              var $this = $parents[_i];\n              var level = Number($this.dataset.level);\n\n              if (level > 0) {\n                levels.push({\n                  level: level,\n                  index: Number($this.dataset.index)\n                });\n              }\n            }\n\n            ;\n            levels = levels.reverse();\n          }\n\n          levels.push({\n            level: l,\n            index: i\n          });\n\n          for (var n = 0; n < levels.length; n++) {\n            // open each level without transition\n            openLevel(levels[n].level, levels[n].index, false);\n          }\n        }\n      }\n\n      function _openNav() {\n        // check if already open\n        if (isOpen()) {\n          return;\n        }\n\n        _open = true;\n        $nav.style.visibility = 'visible';\n        $nav.setAttribute('aria-hidden', false);\n        $nav.classList.add(navOpenClass);\n\n        if ($toggle) {\n          $toggle.forEach(closeToggles);\n\n          if ($toggle_open) {\n            $toggle_open.classList.add(activeToggleClass);\n            $toggle_open.setAttribute('aria-expanded', true);\n          }\n        }\n\n        if (Settings.levelOpen === 'expand' && _closeLevelsTimeout) {\n          clearTimeout(_closeLevelsTimeout);\n        }\n\n        if (Settings.disableBody) {\n          // remember scroll position\n          _top = window.pageYOffset || html.scrollTop || document.documentElement.scrollTop || document.body.scrollTop;\n\n          if (document.documentElement.scrollHeight > document.documentElement.clientHeight) {\n            // has scroll bar\n            html.classList.add('hc-nav-yscroll');\n          }\n\n          document.body.classList.add('hc-nav-open');\n\n          if (_top) {\n            // leave page in place\n            document.body.style.top = \"\".concat(-_top, \"px\");\n          }\n        }\n\n        if ($push_content) {\n          var transformVal = Helpers.getAxis(Settings.position) === 'x' ? _containerWidth : _containerHeight;\n          Helpers.setTransform($push_content, transformVal, Settings.position);\n        }\n\n        if (_initExpanded) {\n          // reset flag\n          _initExpanded = false; // don't trigger open event if nav is initially expanded\n\n          return;\n        } // trigger \"toggle\" event\n\n\n        if ($nav._eventListeners.toggle) {\n          $nav._eventListeners.toggle.forEach(function (ev) {\n            ev.fn(Helpers.customEventObject('toggle', $nav, $nav, {\n              action: 'open'\n            }), Object.assign({}, Settings));\n          });\n        }\n\n        setTimeout(function () {\n          // trigger \"open\" event\n          if ($nav._eventListeners.open) {\n            $nav._eventListeners.open.forEach(function (ev) {\n              ev.fn(Helpers.customEventObject('open', $nav, $nav), Object.assign({}, Settings));\n            });\n          }\n        }, _transitionDuration);\n      }\n\n      function closeNav() {\n        // check if already closed\n        if (!isOpen()) {\n          return;\n        }\n\n        _open = false;\n\n        if ($push_content) {\n          Helpers.setTransform($push_content, false);\n        }\n\n        $nav.classList.remove(navOpenClass);\n        $nav.classList.remove('user-is-tabbing');\n        $nav.setAttribute('aria-hidden', true);\n        $nav_container.removeAttribute('style');\n\n        if ($toggle) {\n          $toggle.forEach(closeToggles);\n        }\n\n        if (Settings.levelOpen === 'expand' && ['top', 'bottom'].indexOf(Settings.position) !== -1) {\n          // close all levels before closing the nav because the nav height changed\n          closeLevel(0);\n        } else if (areLevelsOpenable()) {\n          // close all levels when nav closes\n          _closeLevelsTimeout = setTimeout(function () {\n            // keep timeout so we can prevent it if nav opens again before it's closed\n            closeLevel(0);\n          }, Settings.levelOpen === 'expand' ? _transitionDuration : 0);\n        }\n\n        if (Settings.disableBody) {\n          document.body.classList.remove('hc-nav-open');\n          html.classList.remove('hc-nav-yscroll');\n\n          if (_top) {\n            document.body.style.top = '';\n            document.body.scrollTop = _top;\n            html.scrollTop = _top; // for some reason we need timeout if position is bottom\n\n            if (Settings.position === 'bottom') {\n              var t = _top;\n              setTimeout(function () {\n                // reset page position\n                document.body.scrollTop = t;\n                html.scrollTop = t;\n              }, 0);\n            } // reset top\n\n\n            _top = 0;\n          }\n        } // trigger \"toggle\" event\n\n\n        if ($nav._eventListeners.toggle) {\n          $nav._eventListeners.toggle.forEach(function (ev) {\n            ev.fn(Helpers.customEventObject('toggle', $nav, $nav, {\n              action: 'close'\n            }), Object.assign({}, Settings));\n          });\n        }\n\n        setTimeout(function () {\n          $nav.style.visibility = ''; // trigger \"close\" event\n\n          if ($nav._eventListeners.close) {\n            $nav._eventListeners.close.forEach(function (ev) {\n              ev.fn(Helpers.customEventObject('close', $nav, $nav), Object.assign({}, Settings));\n            });\n          } // only trigger this \"close\" event once and then remove it\n\n\n          if ($nav._eventListeners['close.once']) {\n            $nav._eventListeners['close.once'].forEach(function (ev) {\n              ev.fn(Helpers.customEventObject('close.once', $nav, $nav), Object.assign({}, Settings));\n            });\n          }\n\n          $nav.removeEventListener('close.once');\n        }, _transitionDuration);\n      }\n\n      function toggleNav($t) {\n        return function (e) {\n          if (e) {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n\n          if ($t) {\n            // remember which toggle button was pressed\n            $toggle_open = $t;\n          }\n\n          if (_open) closeNav();else openNav();\n        };\n      }\n\n      function openLevel(l, i) {\n        var transition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var $checkbox = document.querySelector(\"#\".concat(navUniqId, \"-\").concat(l, \"-\").concat(i));\n        var uniqid = $checkbox.value;\n        var $li = $checkbox.parentNode;\n        var $wrap = $li.closest('.nav-wrapper');\n        var $sub_wrap = Helpers.children($li, '.nav-wrapper')[0];\n\n        if (transition === false) {\n          // disable level transition\n          $sub_wrap.style.transition = 'none';\n        }\n\n        $checkbox.setAttribute('checked', true); // ensure it is checked\n\n        $wrap.classList.add('sub-level-open');\n        $li.classList.add('level-open');\n        $li.querySelectorAll('[aria-controls]')[0].setAttribute('aria-expanded', true);\n\n        if (transition === false) {\n          setTimeout(function () {\n            // re-enable level transition after nav open\n            $sub_wrap.style.transition = '';\n          }, _transitionDuration);\n        } // remember what is open\n\n\n        if (_openLevels.indexOf(uniqid) === -1) {\n          _openLevels.push(uniqid);\n        }\n\n        if (Settings.levelOpen === 'overlap') {\n          // close on self click\n          $wrap.addEventListener('click', function () {\n            return closeLevel(l, i);\n          }); // expand the nav\n\n          Helpers.setTransform($nav_container, l * Settings.levelSpacing, Settings.position); // push content\n\n          if ($push_content) {\n            var transformVal = Helpers.getAxis(Settings.position) === 'x' ? _containerWidth : _containerHeight;\n            Helpers.setTransform($push_content, transformVal + l * Settings.levelSpacing, Settings.position);\n          }\n        } // trigger level open event\n\n\n        if ($nav._eventListeners['open.level']) {\n          $nav._eventListeners['open.level'].forEach(function (ev) {\n            ev.fn(Helpers.customEventObject('open.level', $nav, $sub_wrap, {\n              currentLevel: l,\n              currentIndex: i\n            }), Object.assign({}, Settings));\n          });\n        }\n\n        if (_keyboard) {\n          // trap focus inside level when keyboard accessing\n          trapFocus(0, l, i); // reset keyboard flag\n\n          _keyboard = false;\n        }\n      }\n\n      var _closeLevel = function _closeLevel(l, i, transform) {\n        var $checkbox = document.querySelector(\"#\".concat(navUniqId, \"-\").concat(l, \"-\").concat(i));\n        if (!$checkbox) return;\n        var uniqid = $checkbox.value;\n        var $li = $checkbox.parentNode;\n        var $wrap = $li.closest('.nav-wrapper');\n        $checkbox.setAttribute('checked', false); // ensure it is unchecked\n\n        $wrap.classList.remove('sub-level-open');\n        $li.classList.remove('level-open');\n        $li.querySelectorAll('[aria-controls]')[0].setAttribute('aria-expanded', false); // this is not open anymore\n\n        if (_openLevels.indexOf(uniqid) !== -1) {\n          _openLevels.splice(_openLevels.indexOf(uniqid), 1);\n        }\n\n        if (transform && Settings.levelOpen === 'overlap') {\n          //level closed, remove wrapper click\n          $wrap.removeEventListener('click');\n          $wrap.addEventListener('click', Helpers.stopPropagation); // collapse the nav\n\n          Helpers.setTransform($nav_container, (l - 1) * Settings.levelSpacing, Settings.position); // push back content\n\n          if ($push_content) {\n            var transformVal = Helpers.getAxis(Settings.position) === 'x' ? _containerWidth : _containerHeight;\n            Helpers.setTransform($push_content, transformVal + (l - 1) * Settings.levelSpacing, Settings.position);\n          }\n        }\n      };\n\n      function closeLevel(l, i) {\n        for (var level = l; level <= Object.keys(_indexes).length; level++) {\n          if (level === l && typeof i !== 'undefined') {\n            // close specified level with index\n            _closeLevel(l, i, true);\n          } else {\n            if (l === 0 && !Settings.closeOpenLevels) {// do nothing\n            } else {\n              // close all sub sub levels\n              for (var index = 0; index < _indexes[level]; index++) {\n                _closeLevel(level, index, level === l);\n              }\n            }\n          }\n        } // trigger level open event\n\n\n        if (l > 0 && $nav._eventListeners['close.level']) {\n          var $wrap = document.querySelector(\"#\".concat(navUniqId, \"-\").concat(l, \"-\").concat(i)).closest('.nav-wrapper');\n\n          $nav._eventListeners['close.level'].forEach(function (ev) {\n            ev.fn(Helpers.customEventObject('close.level', $nav, $wrap, {\n              currentLevel: l - 1,\n              currentIndex: activeIndex()\n            }), Object.assign({}, Settings));\n          });\n        }\n\n        if (_keyboard) {\n          // trap focus back one level when keyboard accessing\n          trapFocus(null, l - 1); // reset keyboard flag\n\n          _keyboard = false;\n        }\n      }\n      /* Public methods */\n\n\n      $nav.on = function (type, cb) {\n        $nav.addEventListener(type, cb);\n      };\n\n      $nav.off = function (type, cb) {\n        $nav.removeEventListener(type, cb);\n      };\n\n      $nav.getSettings = function () {\n        return Object.assign({}, Settings);\n      };\n\n      $nav.isOpen = isOpen;\n      $nav.open = openNav;\n      $nav.close = closeNav;\n      $nav.toggle = toggleNav(null);\n\n      $nav.update = function (options, updateDom) {\n        // clear updated array\n        UpdatedSettings = []; // update our settings\n\n        if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(options) === 'object') {\n          // only get what's been actually updated\n          for (var prop in options) {\n            if (Settings[prop] !== options[prop]) {\n              UpdatedSettings.push(prop);\n            }\n          }\n\n          Settings = Object.assign({}, Settings, options);\n        }\n\n        if (options === true || updateDom === true) {\n          // can't update Model if original nav is removed\n          if (Settings.removeOriginalNav) {\n            console.warn('%c! HC Offcanvas Nav:' + \"%c Can't update because original navigation has been removed. Disable `removeOriginalNav` option.\", 'color: #fa253b', 'color: default');\n            return;\n          } // hard update, reinit Model and DOM\n\n\n          initNav(true);\n          createModel();\n          createNavDom(true);\n        } else {\n          // soft update just reinit DOM from existing Model\n          initNav(true);\n          createNavDom(true);\n        }\n      };\n\n      return $nav; // return our nav element\n    };\n\n    if (Array.isArray(elem) || elem instanceof NodeList) {\n      var navs = []; // call the plugin on each element\n\n      for (var i = 0; i < elem.length; i++) {\n        navs.push(Plugin(elem[i]));\n      }\n\n      return navs.length > 1 ? navs : navs[0];\n    } else {\n      return Plugin(elem);\n    }\n  }; // jQuery Plugin\n\n\n  if (typeof window.jQuery !== 'undefined') {\n    var $ = window.jQuery;\n    var namespace = 'hcOffcanvasNav';\n    $.fn.extend({\n      hcOffcanvasNav: function hcOffcanvasNav(args) {\n        // check if selected element exist\n        if (!this.length) return this;\n        return this.each(function () {\n          var instance = $.data(this, namespace);\n\n          if (instance) {\n            // already created, just update\n            instance.update(args);\n          } else {\n            // create new instance\n            instance = new _hcOffcanvasNav(this, args);\n            $.data(this, namespace, instance);\n          }\n        });\n      }\n    });\n  } // browser global\n\n\n  window.hcOffcanvasNav = window.hcOffcanvasNav || _hcOffcanvasNav;\n  return _hcOffcanvasNav;\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../pulina/node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///../hc-offcanvas-nav/src/js/hc-offcanvas-nav.js?")},"./content/themes/annastiina/js/src/front-end.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var moveto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moveto */ \"./content/themes/annastiina/node_modules/moveto/dist/moveTo.js\");\n/* harmony import */ var moveto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moveto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vanilla_lazyload__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vanilla-lazyload */ \"./content/themes/annastiina/node_modules/vanilla-lazyload/dist/lazyload.min.js\");\n/* harmony import */ var vanilla_lazyload__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vanilla_lazyload__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _modules_localization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/localization */ \"./content/themes/annastiina/js/src/modules/localization.js\");\n/* harmony import */ var _modules_external_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/external-link */ \"./content/themes/annastiina/js/src/modules/external-link.js\");\n/* harmony import */ var _modules_gutenberg_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/gutenberg-helpers */ \"./content/themes/annastiina/js/src/modules/gutenberg-helpers.js\");\n/* harmony import */ var _modules_webchat_login_form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/webchat-login-form */ \"./content/themes/annastiina/js/src/modules/webchat-login-form.js\");\n/* harmony import */ var _modules_webchat_login_form__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_modules_webchat_login_form__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var what_input__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! what-input */ \"./content/themes/annastiina/node_modules/what-input/dist/what-input.js\");\n/* harmony import */ var what_input__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(what_input__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var hc_offcanvas_nav_src_js_hc_offcanvas_nav__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! hc-offcanvas-nav/src/js/hc-offcanvas-nav */ \"../hc-offcanvas-nav/src/js/hc-offcanvas-nav.js\");\n/* harmony import */ var hc_offcanvas_nav_src_js_hc_offcanvas_nav_helpers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! hc-offcanvas-nav/src/js/hc-offcanvas-nav.helpers */ \"../hc-offcanvas-nav/src/js/hc-offcanvas-nav.helpers.js\");\n/* harmony import */ var _modules_navigation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/navigation */ \"./content/themes/annastiina/js/src/modules/navigation.js\");\n/* harmony import */ var _modules_navigation__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_modules_navigation__WEBPACK_IMPORTED_MODULE_9__);\n/**\n * Air theme JavaScript.\n */\n// Import modules (comment to disable)\n\n\n\n\n\n\n // Navigation\n// import hcOffcanvasNav from 'hc-offcanvas-nav';\n\n\n\n // Define Javascript is active by changing the body class\n\ndocument.body.classList.remove('no-js');\ndocument.body.classList.add('js'); // Style external links\n\nObject(_modules_external_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(); // Init lazyload\n// Usage example on template side when air-helper enabled:\n// <?php vanilla_lazyload_tag( get_post_thumbnail_id( $post->ID ) ); ?>\n// Refer to documentation:\n// 1) https://github.com/digitoimistodude/air-helper#image-lazyloading-1\n// 2) https://github.com/verlok/vanilla-lazyload#-getting-started---html\n\nvar annastiina_LazyLoad = new vanilla_lazyload__WEBPACK_IMPORTED_MODULE_1___default.a(); // After your content has changed...\n\nannastiina_LazyLoad.update(); // jQuery start\n\n(function ($) {\n  // Accessibility: Ensure back to top is right color on right background\n  // Note: Needs .has-light-bg or .has-dark-bg class on all blocks\n  var stickyOffset = $('.back-to-top').offset();\n  var $contentDivs = $('.block, .site-footer');\n  $(document).scroll(function () {\n    $contentDivs.each(function (k) {\n      var _thisOffset = $(this).offset();\n\n      var _actPosition = _thisOffset.top - $(window).scrollTop();\n\n      if (_actPosition < stickyOffset.top && _actPosition + $(this).height() > 0) {\n        $('.back-to-top').removeClass('has-light-bg has-dark-bg').addClass($(this).hasClass('has-light-bg') ? 'has-light-bg' : 'has-dark-bg');\n        return false;\n      }\n    });\n  }); // Detect Visible section on viewport from bottom\n  // @link https://codepen.io/BoyWithSilverWings/pen/MJgQqR\n\n  $.fn.isInViewport = function () {\n    var elementTop = $(this).offset().top;\n    var elementBottom = elementTop + $(this).outerHeight();\n    var viewportTop = $(window).scrollTop();\n    var viewportBottom = viewportTop + $(window).height();\n    return elementBottom > viewportTop && elementTop < viewportBottom;\n  }; // Accessibility: Ensure back to top is right color on right background\n\n\n  $(window).on('resize scroll', function () {\n    $('.block, .site-footer').each(function () {\n      if ($(this).isInViewport()) {\n        $('.back-to-top').removeClass('has-light-bg has-dark-bg').addClass($(this).hasClass('has-light-bg') ? 'has-light-bg' : 'has-dark-bg');\n      }\n    });\n  }); // Hide or show the 'back to top' link\n\n  $(window).scroll(function () {\n    // Back to top\n    var offset = 300; // Browser window scroll (in pixels) after which the 'back to top' link is shown\n\n    var offset_opacity = 1200; // Browser window scroll (in pixels) after which the link opacity is reduced\n\n    var scroll_top_duration = 700; // Duration of the top scrolling animation (in ms)\n\n    var link_class = '.back-to-top';\n\n    if ($(this).scrollTop() > offset) {\n      $(link_class).addClass('is-visible');\n    } else {\n      $(link_class).removeClass('is-visible');\n    }\n\n    if ($(this).scrollTop() > offset_opacity) {\n      $(link_class).addClass('fade-out');\n    } else {\n      $(link_class).removeClass('fade-out');\n    }\n  }); // Document ready start\n\n  $(function () {\n    $('#nav').hcOffcanvasNav({\n      disableAt: false,\n      customToggle: '.nav-toggle',\n      navTitle: false,\n      levelTitles: true,\n      levelTitleAsBack: true,\n      position: 'right',\n      pushContent: '#page',\n      insertClose: false,\n      labelBack: 'Takaisin',\n      activeToggleClass: 'is-active'\n    }); // Toptod polling\n    // $('#toptod').fadeIn();\n    // $(\"#toptod\").load('https://peikko.us/toptod-content-annastiina.php');\n    //   var refreshId = setInterval(function() {\n    // $(\"#toptod\").load('https://peikko.us/toptod-content-annastiina.php',\n    //   function() {\n    //     $(\"#content\").fadeIn();\n    //   }\n    // );}, 1000);\n  });\n})(jQuery);\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Moveto triggers\n  var easeFunctions = {\n    easeInQuad: function easeInQuad(t, b, c, d) {\n      t /= d;\n      return c * t * t + b;\n    },\n    easeOutQuad: function easeOutQuad(t, b, c, d) {\n      t /= d;\n      return -c * t * (t - 2) + b;\n    }\n  };\n  var moveTo = new moveto__WEBPACK_IMPORTED_MODULE_0___default.a({\n    ease: 'easeInQuad'\n  }, easeFunctions);\n  var triggers = document.getElementsByClassName('js-trigger');\n\n  for (var i = 0; i < triggers.length; i++) {\n    moveTo.registerTrigger(triggers[i]);\n  }\n});\n\n//# sourceURL=webpack:///./content/themes/annastiina/js/src/front-end.js?")},"./content/themes/annastiina/js/src/modules/external-link.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return styleExternalLinks; });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./content/themes/annastiina/node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _localization__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./localization */ \"./content/themes/annastiina/js/src/modules/localization.js\");\n\n\n/**\n * Style external links\n */\n\n\nfunction isLinkExternal(link, localDomains) {\n  // Empty links are not external\n  if (!link.length) {\n    return false;\n  }\n\n  var exceptions = ['#', 'tel:', 'mailto:', '/']; // Check if the url starts with some of the exceptions\n\n  var isException = exceptions.some(function (exception) {\n    var compare = new RegExp(\"^\".concat(exception), 'g');\n    return compare.test(link);\n  });\n\n  if (isException) {\n    return false;\n  }\n\n  var linkUrl;\n\n  try {\n    linkUrl = new URL(link);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.log(\"Invalid URL: \".concat(link));\n    return false;\n  } // Check if host is one of the local domains\n\n\n  return !localDomains.some(function (domain) {\n    return linkUrl.host === domain;\n  });\n}\n\nfunction styleExternalLinks() {\n  var localDomains = [window.location.host];\n\n  if (typeof window.annastiina_externalLinkDomains !== 'undefined') {\n    localDomains = localDomains.concat(window.annastiina_externalLinkDomains);\n  }\n\n  var links = document.querySelectorAll('a');\n\n  var externalLinks = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(links).filter(function (link) {\n    return isLinkExternal(link.href, localDomains);\n  });\n\n  externalLinks.forEach(function (externalLink) {\n    var ariaLabel = externalLink.target === '_blank' ? \"\".concat(Object(_localization__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('external_link'), \" \").concat(externalLink.textContent, \", \").concat(Object(_localization__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('target_blank')) : \"\".concat(Object(_localization__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('external_link'), \" \").concat(externalLink.textContent);\n    externalLink.setAttribute('aria-label', ariaLabel);\n    externalLink.classList.add('is-external-link');\n  });\n}\n\n//# sourceURL=webpack:///./content/themes/annastiina/js/src/modules/external-link.js?")},"./content/themes/annastiina/js/src/modules/gutenberg-helpers.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./content/themes/annastiina/node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// Gutengerg magic for alignright and alignleft images\nvar figures = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(document.querySelectorAll('figure'));\n\nfigures.forEach(function (figure) {\n  var img = figure.querySelector('img');\n\n  if (typeof img === 'undefined') {\n    return;\n  }\n\n  figure.style.setProperty('--child-img-width', \"\".concat(img.clientWidth, \"px\"));\n});\n\n//# sourceURL=webpack:///./content/themes/annastiina/js/src/modules/gutenberg-helpers.js?")},"./content/themes/annastiina/js/src/modules/localization.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return getLocalization; });\nfunction getLocalization(stringKey) {\n  if (typeof window.annastiina_screenReaderText === 'undefined' || typeof window.annastiina_screenReaderText[stringKey] === 'undefined') {\n    // eslint-disable-next-line no-console\n    console.error(\"Missing translation for \".concat(stringKey));\n    return '';\n  }\n\n  return window.annastiina_screenReaderText[stringKey];\n}\n\n//# sourceURL=webpack:///./content/themes/annastiina/js/src/modules/localization.js?")},"./content/themes/annastiina/js/src/modules/navigation.js":function(module,exports){eval("// TODO: Refactor file\n\n/* eslint-disable default-case, eqeqeq, no-restricted-globals, no-undef, no-var, vars-on-top, prefer-const, max-len, prefer-destructuring, no-redeclare, no-plusplus, no-use-before-define, no-unused-vars, block-scoped-var, func-names */\n\n/*\nAn accessible menu for WordPress\n\nhttps://github.com/theme-smith/accessible-nav-wp\nKirsten Smith (kirsten@themesmith.co.uk)\nLicensed GPL v.2 (http://www.gnu.org/licenses/gpl-2.0.html)\n\nThis work derived from:\nhttps://github.com/WordPress/twentysixteen (GPL v.2)\nhttps://github.com/wpaccessibility/a11ythemepatterns/tree/master/menu-keyboard-arrow-nav (GPL v.2)\n*/\n(function ($) {\n  var menuContainer = $('body');\n  var menuToggle = menuContainer.find('#nav-toggle'); // Toggles the menu button\n\n  (function () {\n    if (!menuToggle.length) {\n      return;\n    }\n\n    menuToggle.on('click', function () {\n      // Change screen reader expanded state\n      $(this).attr('aria-expanded', $(this).attr('aria-expanded') === 'false' ? 'true' : 'false'); // Change screen reader open/close labels\n\n      $('#nav-toggle-label').text( // eslint-disable-next-line no-undef\n      $('#nav-toggle-label').text() === annastiina_screenReaderText.expand_toggle ? annastiina_screenReaderText.collapse_toggle : annastiina_screenReaderText.expand_toggle);\n      $(this).attr('aria-label', $(this).attr('aria-label') === annastiina_screenReaderText.expand_toggle ? annastiina_screenReaderText.collapse_toggle : annastiina_screenReaderText.expand_toggle);\n    });\n  })();\n})(jQuery);\n\n//# sourceURL=webpack:///./content/themes/annastiina/js/src/modules/navigation.js?")},"./content/themes/annastiina/js/src/modules/webchat-login-form.js":function(module,exports){eval("/* eslint-disable func-names */\n// Type the same thing on other required input\nwindow.onload = function () {\n  if (document.getElementById('nick') != null) {\n    var src = document.getElementById('nick');\n    var dst = document.getElementById('username');\n    src.addEventListener('input', function () {\n      dst.value = src.value;\n    });\n  }\n};\n\n//# sourceURL=webpack:///./content/themes/annastiina/js/src/modules/webchat-login-form.js?")},"./content/themes/annastiina/node_modules/@babel/runtime/helpers/arrayLikeToArray.js":function(module,exports){eval("function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\n\n//# sourceURL=webpack:///./content/themes/annastiina/node_modules/@babel/runtime/helpers/arrayLikeToArray.js?")},"./content/themes/annastiina/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":function(module,exports,__webpack_require__){eval('var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ "./content/themes/annastiina/node_modules/@babel/runtime/helpers/arrayLikeToArray.js");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\n\n//# sourceURL=webpack:///./content/themes/annastiina/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js?')},"./content/themes/annastiina/node_modules/@babel/runtime/helpers/iterableToArray.js":function(module,exports){eval('function _iterableToArray(iter) {\n  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\n\n//# sourceURL=webpack:///./content/themes/annastiina/node_modules/@babel/runtime/helpers/iterableToArray.js?')},"./content/themes/annastiina/node_modules/@babel/runtime/helpers/nonIterableSpread.js":function(module,exports){eval('function _nonIterableSpread() {\n  throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");\n}\n\nmodule.exports = _nonIterableSpread;\n\n//# sourceURL=webpack:///./content/themes/annastiina/node_modules/@babel/runtime/helpers/nonIterableSpread.js?')},"./content/themes/annastiina/node_modules/@babel/runtime/helpers/toConsumableArray.js":function(module,exports,__webpack_require__){eval('var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ "./content/themes/annastiina/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js");\n\nvar iterableToArray = __webpack_require__(/*! ./iterableToArray */ "./content/themes/annastiina/node_modules/@babel/runtime/helpers/iterableToArray.js");\n\nvar unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "./content/themes/annastiina/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");\n\nvar nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ "./content/themes/annastiina/node_modules/@babel/runtime/helpers/nonIterableSpread.js");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\n\n//# sourceURL=webpack:///./content/themes/annastiina/node_modules/@babel/runtime/helpers/toConsumableArray.js?')},"./content/themes/annastiina/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":function(module,exports,__webpack_require__){eval('var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ "./content/themes/annastiina/node_modules/@babel/runtime/helpers/arrayLikeToArray.js");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === "string") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === "Object" && o.constructor) n = o.constructor.name;\n  if (n === "Map" || n === "Set") return Array.from(o);\n  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\n\n//# sourceURL=webpack:///./content/themes/annastiina/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js?')},"./content/themes/annastiina/node_modules/moveto/dist/moveTo.js":function(module,exports,__webpack_require__){"use strict";eval("/*!\n * MoveTo - A lightweight scroll animation javascript library without any dependency.\n * Version 1.8.2 (28-06-2019 14:30)\n * Licensed under MIT\n * Copyright 2019 Hasan Aydoğdu <hsnaydd@gmail.com>\n */\n\n\n\nvar MoveTo = function () {\n  /**\n   * Defaults\n   * @type {object}\n   */\n  var defaults = {\n    tolerance: 0,\n    duration: 800,\n    easing: 'easeOutQuart',\n    container: window,\n    callback: function callback() {}\n  };\n  /**\n   * easeOutQuart Easing Function\n   * @param  {number} t - current time\n   * @param  {number} b - start value\n   * @param  {number} c - change in value\n   * @param  {number} d - duration\n   * @return {number} - calculated value\n   */\n\n  function easeOutQuart(t, b, c, d) {\n    t /= d;\n    t--;\n    return -c * (t * t * t * t - 1) + b;\n  }\n  /**\n   * Merge two object\n   *\n   * @param  {object} obj1\n   * @param  {object} obj2\n   * @return {object} merged object\n   */\n\n\n  function mergeObject(obj1, obj2) {\n    var obj3 = {};\n    Object.keys(obj1).forEach(function (propertyName) {\n      obj3[propertyName] = obj1[propertyName];\n    });\n    Object.keys(obj2).forEach(function (propertyName) {\n      obj3[propertyName] = obj2[propertyName];\n    });\n    return obj3;\n  }\n\n  ;\n  /**\n   * Converts camel case to kebab case\n   * @param  {string} val the value to be converted\n   * @return {string} the converted value\n   */\n\n  function kebabCase(val) {\n    return val.replace(/([A-Z])/g, function ($1) {\n      return '-' + $1.toLowerCase();\n    });\n  }\n\n  ;\n  /**\n   * Count a number of item scrolled top\n   * @param  {Window|HTMLElement} container\n   * @return {number}\n   */\n\n  function countScrollTop(container) {\n    if (container instanceof HTMLElement) {\n      return container.scrollTop;\n    }\n\n    return container.pageYOffset;\n  }\n\n  ;\n  /**\n   * MoveTo Constructor\n   * @param {object} options Options\n   * @param {object} easeFunctions Custom ease functions\n   */\n\n  function MoveTo() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var easeFunctions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.options = mergeObject(defaults, options);\n    this.easeFunctions = mergeObject({\n      easeOutQuart: easeOutQuart\n    }, easeFunctions);\n  }\n  /**\n   * Register a dom element as trigger\n   * @param  {HTMLElement} dom Dom trigger element\n   * @param  {function} callback Callback function\n   * @return {function|void} unregister function\n   */\n\n\n  MoveTo.prototype.registerTrigger = function (dom, callback) {\n    var _this = this;\n\n    if (!dom) {\n      return;\n    }\n\n    var href = dom.getAttribute('href') || dom.getAttribute('data-target'); // The element to be scrolled\n\n    var target = href && href !== '#' ? document.getElementById(href.substring(1)) : document.body;\n    var options = mergeObject(this.options, _getOptionsFromTriggerDom(dom, this.options));\n\n    if (typeof callback === 'function') {\n      options.callback = callback;\n    }\n\n    var listener = function listener(e) {\n      e.preventDefault();\n\n      _this.move(target, options);\n    };\n\n    dom.addEventListener('click', listener, false);\n    return function () {\n      return dom.removeEventListener('click', listener, false);\n    };\n  };\n  /**\n   * Move\n   * Scrolls to given element by using easeOutQuart function\n   * @param  {HTMLElement|number} target Target element to be scrolled or target position\n   * @param  {object} options Custom options\n   */\n\n\n  MoveTo.prototype.move = function (target) {\n    var _this2 = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (target !== 0 && !target) {\n      return;\n    }\n\n    options = mergeObject(this.options, options);\n    var distance = typeof target === 'number' ? target : target.getBoundingClientRect().top;\n    var from = countScrollTop(options.container);\n    var startTime = null;\n    var lastYOffset;\n    distance -= options.tolerance; // rAF loop\n\n    var loop = function loop(currentTime) {\n      var currentYOffset = countScrollTop(_this2.options.container);\n\n      if (!startTime) {\n        // To starts time from 1, we subtracted 1 from current time\n        // If time starts from 1 The first loop will not do anything,\n        // because easing value will be zero\n        startTime = currentTime - 1;\n      }\n\n      var timeElapsed = currentTime - startTime;\n\n      if (lastYOffset) {\n        if (distance > 0 && lastYOffset > currentYOffset || distance < 0 && lastYOffset < currentYOffset) {\n          return options.callback(target);\n        }\n      }\n\n      lastYOffset = currentYOffset;\n\n      var val = _this2.easeFunctions[options.easing](timeElapsed, from, distance, options.duration);\n\n      options.container.scroll(0, val);\n\n      if (timeElapsed < options.duration) {\n        window.requestAnimationFrame(loop);\n      } else {\n        options.container.scroll(0, distance + from);\n        options.callback(target);\n      }\n    };\n\n    window.requestAnimationFrame(loop);\n  };\n  /**\n   * Adds custom ease function\n   * @param {string}   name Ease function name\n   * @param {function} fn   Ease function\n   */\n\n\n  MoveTo.prototype.addEaseFunction = function (name, fn) {\n    this.easeFunctions[name] = fn;\n  };\n  /**\n   * Returns options which created from trigger dom element\n   * @param  {HTMLElement} dom Trigger dom element\n   * @param  {object} options The instance's options\n   * @return {object} The options which created from trigger dom element\n   */\n\n\n  function _getOptionsFromTriggerDom(dom, options) {\n    var domOptions = {};\n    Object.keys(options).forEach(function (key) {\n      var value = dom.getAttribute(\"data-mt-\".concat(kebabCase(key)));\n\n      if (value) {\n        domOptions[key] = isNaN(value) ? value : parseInt(value, 10);\n      }\n    });\n    return domOptions;\n  }\n\n  return MoveTo;\n}();\n\nif (true) {\n  module.exports = MoveTo;\n} else {}\n\n//# sourceURL=webpack:///./content/themes/annastiina/node_modules/moveto/dist/moveTo.js?")},"./content/themes/annastiina/node_modules/vanilla-lazyload/dist/lazyload.min.js":function(module,exports,__webpack_require__){eval('!function(t,n){ true?module.exports=n():undefined}(this,(function(){"use strict";function t(){return(t=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])}return t}).apply(this,arguments)}var n="undefined"!=typeof window,e=n&&!("onscroll"in window)||"undefined"!=typeof navigator&&/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent),i=n&&"IntersectionObserver"in window,o=n&&"classList"in document.createElement("p"),r=n&&window.devicePixelRatio>1,a={elements_selector:".lazy",container:e||n?document:null,threshold:300,thresholds:null,data_src:"src",data_srcset:"srcset",data_sizes:"sizes",data_bg:"bg",data_bg_hidpi:"bg-hidpi",data_bg_multi:"bg-multi",data_bg_multi_hidpi:"bg-multi-hidpi",data_poster:"poster",class_applied:"applied",class_loading:"loading",class_loaded:"loaded",class_error:"error",class_entered:"entered",class_exited:"exited",unobserve_completed:!0,unobserve_entered:!1,cancel_on_exit:!0,callback_enter:null,callback_exit:null,callback_applied:null,callback_loading:null,callback_loaded:null,callback_error:null,callback_finish:null,callback_cancel:null,use_native:!1},c=function(n){return t({},a,n)},s=function(t,n){var e,i="LazyLoad::Initialized",o=new t(n);try{e=new CustomEvent(i,{detail:{instance:o}})}catch(t){(e=document.createEvent("CustomEvent")).initCustomEvent(i,!1,!1,{instance:o})}window.dispatchEvent(e)},l="loading",u="loaded",d="applied",f="error",_="native",g="data-",v="ll-status",p=function(t,n){return t.getAttribute(g+n)},b=function(t){return p(t,v)},h=function(t,n){return function(t,n,e){var i="data-ll-status";null!==e?t.setAttribute(i,e):t.removeAttribute(i)}(t,0,n)},m=function(t){return h(t,null)},E=function(t){return null===b(t)},y=function(t){return b(t)===_},A=[l,u,d,f],I=function(t,n,e,i){t&&(void 0===i?void 0===e?t(n):t(n,e):t(n,e,i))},L=function(t,n){o?t.classList.add(n):t.className+=(t.className?" ":"")+n},w=function(t,n){o?t.classList.remove(n):t.className=t.className.replace(new RegExp("(^|\\\\s+)"+n+"(\\\\s+|$)")," ").replace(/^\\s+/,"").replace(/\\s+$/,"")},k=function(t){return t.llTempImage},O=function(t,n){if(n){var e=n._observer;e&&e.unobserve(t)}},x=function(t,n){t&&(t.loadingCount+=n)},z=function(t,n){t&&(t.toLoadCount=n)},C=function(t){for(var n,e=[],i=0;n=t.children[i];i+=1)"SOURCE"===n.tagName&&e.push(n);return e},N=function(t,n,e){e&&t.setAttribute(n,e)},M=function(t,n){t.removeAttribute(n)},R=function(t){return!!t.llOriginalAttrs},G=function(t){if(!R(t)){var n={};n.src=t.getAttribute("src"),n.srcset=t.getAttribute("srcset"),n.sizes=t.getAttribute("sizes"),t.llOriginalAttrs=n}},T=function(t){if(R(t)){var n=t.llOriginalAttrs;N(t,"src",n.src),N(t,"srcset",n.srcset),N(t,"sizes",n.sizes)}},j=function(t,n){N(t,"sizes",p(t,n.data_sizes)),N(t,"srcset",p(t,n.data_srcset)),N(t,"src",p(t,n.data_src))},D=function(t){M(t,"src"),M(t,"srcset"),M(t,"sizes")},F=function(t,n){var e=t.parentNode;e&&"PICTURE"===e.tagName&&C(e).forEach(n)},P={IMG:function(t,n){F(t,(function(t){G(t),j(t,n)})),G(t),j(t,n)},IFRAME:function(t,n){N(t,"src",p(t,n.data_src))},VIDEO:function(t,n){!function(t,e){C(t).forEach((function(t){N(t,"src",p(t,n.data_src))}))}(t),N(t,"poster",p(t,n.data_poster)),N(t,"src",p(t,n.data_src)),t.load()}},S=function(t,n){var e=P[t.tagName];e&&e(t,n)},V=function(t,n,e){x(e,1),L(t,n.class_loading),h(t,l),I(n.callback_loading,t,e)},U=["IMG","IFRAME","VIDEO"],$=function(t,n){!n||function(t){return t.loadingCount>0}(n)||function(t){return t.toLoadCount>0}(n)||I(t.callback_finish,n)},q=function(t,n,e){t.addEventListener(n,e),t.llEvLisnrs[n]=e},H=function(t,n,e){t.removeEventListener(n,e)},B=function(t){return!!t.llEvLisnrs},J=function(t){if(B(t)){var n=t.llEvLisnrs;for(var e in n){var i=n[e];H(t,e,i)}delete t.llEvLisnrs}},K=function(t,n,e){!function(t){delete t.llTempImage}(t),x(e,-1),function(t){t&&(t.toLoadCount-=1)}(e),w(t,n.class_loading),n.unobserve_completed&&O(t,e)},Q=function(t,n,e){var i=k(t)||t;B(i)||function(t,n,e){B(t)||(t.llEvLisnrs={});var i="VIDEO"===t.tagName?"loadeddata":"load";q(t,i,n),q(t,"error",e)}(i,(function(o){!function(t,n,e,i){var o=y(n);K(n,e,i),L(n,e.class_loaded),h(n,u),I(e.callback_loaded,n,i),o||$(e,i)}(0,t,n,e),J(i)}),(function(o){!function(t,n,e,i){var o=y(n);K(n,e,i),L(n,e.class_error),h(n,f),I(e.callback_error,n,i),o||$(e,i)}(0,t,n,e),J(i)}))},W=function(t,n,e){!function(t){t.llTempImage=document.createElement("IMG")}(t),Q(t,n,e),function(t,n,e){var i=p(t,n.data_bg),o=p(t,n.data_bg_hidpi),a=r&&o?o:i;a&&(t.style.backgroundImage=\'url("\'.concat(a,\'")\'),k(t).setAttribute("src",a),V(t,n,e))}(t,n,e),function(t,n,e){var i=p(t,n.data_bg_multi),o=p(t,n.data_bg_multi_hidpi),a=r&&o?o:i;a&&(t.style.backgroundImage=a,function(t,n,e){L(t,n.class_applied),h(t,d),n.unobserve_completed&&O(t,n),I(n.callback_applied,t,e)}(t,n,e))}(t,n,e)},X=function(t,n,e){!function(t){return U.indexOf(t.tagName)>-1}(t)?W(t,n,e):function(t,n,e){Q(t,n,e),S(t,n),V(t,n,e)}(t,n,e)},Y=["IMG","IFRAME"],Z=function(t){return t.use_native&&"loading"in HTMLImageElement.prototype},tt=function(t,n,e){t.forEach((function(t){return function(t){return t.isIntersecting||t.intersectionRatio>0}(t)?function(t,n,e,i){h(t,"entered"),L(t,e.class_entered),w(t,e.class_exited),function(t,n,e){n.unobserve_entered&&O(t,e)}(t,e,i),I(e.callback_enter,t,n,i),function(t){return A.indexOf(b(t))>=0}(t)||X(t,e,i)}(t.target,t,n,e):function(t,n,e,i){E(t)||(L(t,e.class_exited),function(t,n,e,i){e.cancel_on_exit&&function(t){return b(t)===l}(t)&&"IMG"===t.tagName&&(J(t),function(t){F(t,(function(t){D(t)})),D(t)}(t),function(t){F(t,(function(t){T(t)})),T(t)}(t),w(t,e.class_loading),x(i,-1),m(t),I(e.callback_cancel,t,n,i))}(t,n,e,i),I(e.callback_exit,t,n,i))}(t.target,t,n,e)}))},nt=function(t){return Array.prototype.slice.call(t)},et=function(t){return t.container.querySelectorAll(t.elements_selector)},it=function(t){return function(t){return b(t)===f}(t)},ot=function(t,n){return function(t){return nt(t).filter(E)}(t||et(n))},rt=function(t,e){var o=c(t);this._settings=o,this.loadingCount=0,function(t,n){i&&!Z(t)&&(n._observer=new IntersectionObserver((function(e){tt(e,t,n)}),function(t){return{root:t.container===document?null:t.container,rootMargin:t.thresholds||t.threshold+"px"}}(t)))}(o,this),function(t,e){n&&window.addEventListener("online",(function(){!function(t,n){var e;(e=et(t),nt(e).filter(it)).forEach((function(n){w(n,t.class_error),m(n)})),n.update()}(t,e)}))}(o,this),this.update(e)};return rt.prototype={update:function(t){var n,o,r=this._settings,a=ot(t,r);z(this,a.length),!e&&i?Z(r)?function(t,n,e){t.forEach((function(t){-1!==Y.indexOf(t.tagName)&&(t.setAttribute("loading","lazy"),function(t,n,e){Q(t,n,e),S(t,n),h(t,_)}(t,n,e))})),z(e,0)}(a,r,this):(o=a,function(t){t.disconnect()}(n=this._observer),function(t,n){n.forEach((function(n){t.observe(n)}))}(n,o)):this.loadAll(a)},destroy:function(){this._observer&&this._observer.disconnect(),et(this._settings).forEach((function(t){delete t.llOriginalAttrs})),delete this._observer,delete this._settings,delete this.loadingCount,delete this.toLoadCount},loadAll:function(t){var n=this,e=this._settings;ot(t,e).forEach((function(t){O(t,n),X(t,e,n)}))}},rt.load=function(t,n){var e=c(n);X(t,e)},rt.resetStatus=function(t){m(t)},n&&function(t,n){if(n)if(n.length)for(var e,i=0;e=n[i];i+=1)s(t,e);else s(t,n)}(rt,window.lazyLoadOptions),rt}));\n\n\n//# sourceURL=webpack:///./content/themes/annastiina/node_modules/vanilla-lazyload/dist/lazyload.min.js?')},"./content/themes/annastiina/node_modules/what-input/dist/what-input.js":function(module,exports,__webpack_require__){eval("/**\n * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).\n * @version v5.2.10\n * @link https://github.com/ten1seven/what-input\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tmodule.exports = function () {\n\t  /*\n\t   * bail out if there is no document or window\n\t   * (i.e. in a node/non-DOM environment)\n\t   *\n\t   * Return a stubbed API instead\n\t   */\n\t  if (typeof document === 'undefined' || typeof window === 'undefined') {\n\t    return {\n\t      // always return \"initial\" because no interaction will ever be detected\n\t      ask: function ask() {\n\t        return 'initial';\n\t      },\n\n\t      // always return null\n\t      element: function element() {\n\t        return null;\n\t      },\n\n\t      // no-op\n\t      ignoreKeys: function ignoreKeys() {},\n\n\t      // no-op\n\t      specificKeys: function specificKeys() {},\n\n\t      // no-op\n\t      registerOnChange: function registerOnChange() {},\n\n\t      // no-op\n\t      unRegisterOnChange: function unRegisterOnChange() {}\n\t    };\n\t  }\n\n\t  /*\n\t   * variables\n\t   */\n\n\t  // cache document.documentElement\n\t  var docElem = document.documentElement;\n\n\t  // currently focused dom element\n\t  var currentElement = null;\n\n\t  // last used input type\n\t  var currentInput = 'initial';\n\n\t  // last used input intent\n\t  var currentIntent = currentInput;\n\n\t  // UNIX timestamp of current event\n\t  var currentTimestamp = Date.now();\n\n\t  // check for a `data-whatpersist` attribute on either the `html` or `body` elements, defaults to `true`\n\t  var shouldPersist = 'false';\n\n\t  // form input types\n\t  var formInputs = ['button', 'input', 'select', 'textarea'];\n\n\t  // empty array for holding callback functions\n\t  var functionList = [];\n\n\t  // list of modifier keys commonly used with the mouse and\n\t  // can be safely ignored to prevent false keyboard detection\n\t  var ignoreMap = [16, // shift\n\t  17, // control\n\t  18, // alt\n\t  91, // Windows key / left Apple cmd\n\t  93 // Windows menu / right Apple cmd\n\t  ];\n\n\t  var specificMap = [];\n\n\t  // mapping of events to input types\n\t  var inputMap = {\n\t    keydown: 'keyboard',\n\t    keyup: 'keyboard',\n\t    mousedown: 'mouse',\n\t    mousemove: 'mouse',\n\t    MSPointerDown: 'pointer',\n\t    MSPointerMove: 'pointer',\n\t    pointerdown: 'pointer',\n\t    pointermove: 'pointer',\n\t    touchstart: 'touch',\n\t    touchend: 'touch'\n\n\t    // boolean: true if the page is being scrolled\n\t  };var isScrolling = false;\n\n\t  // store current mouse position\n\t  var mousePos = {\n\t    x: null,\n\t    y: null\n\n\t    // map of IE 10 pointer events\n\t  };var pointerMap = {\n\t    2: 'touch',\n\t    3: 'touch', // treat pen like touch\n\t    4: 'mouse'\n\n\t    // check support for passive event listeners\n\t  };var supportsPassive = false;\n\n\t  try {\n\t    var opts = Object.defineProperty({}, 'passive', {\n\t      get: function get() {\n\t        supportsPassive = true;\n\t      }\n\t    });\n\n\t    window.addEventListener('test', null, opts);\n\t  } catch (e) {}\n\t  // fail silently\n\n\n\t  /*\n\t   * set up\n\t   */\n\n\t  var setUp = function setUp() {\n\t    // add correct mouse wheel event mapping to `inputMap`\n\t    inputMap[detectWheel()] = 'mouse';\n\n\t    addListeners();\n\t  };\n\n\t  /*\n\t   * events\n\t   */\n\n\t  var addListeners = function addListeners() {\n\t    // `pointermove`, `MSPointerMove`, `mousemove` and mouse wheel event binding\n\t    // can only demonstrate potential, but not actual, interaction\n\t    // and are treated separately\n\t    var options = supportsPassive ? { passive: true } : false;\n\n\t    document.addEventListener('DOMContentLoaded', setPersist);\n\n\t    // pointer events (mouse, pen, touch)\n\t    if (window.PointerEvent) {\n\t      window.addEventListener('pointerdown', setInput);\n\t      window.addEventListener('pointermove', setIntent);\n\t    } else if (window.MSPointerEvent) {\n\t      window.addEventListener('MSPointerDown', setInput);\n\t      window.addEventListener('MSPointerMove', setIntent);\n\t    } else {\n\t      // mouse events\n\t      window.addEventListener('mousedown', setInput);\n\t      window.addEventListener('mousemove', setIntent);\n\n\t      // touch events\n\t      if ('ontouchstart' in window) {\n\t        window.addEventListener('touchstart', setInput, options);\n\t        window.addEventListener('touchend', setInput);\n\t      }\n\t    }\n\n\t    // mouse wheel\n\t    window.addEventListener(detectWheel(), setIntent, options);\n\n\t    // keyboard events\n\t    window.addEventListener('keydown', setInput);\n\t    window.addEventListener('keyup', setInput);\n\n\t    // focus events\n\t    window.addEventListener('focusin', setElement);\n\t    window.addEventListener('focusout', clearElement);\n\t  };\n\n\t  // checks if input persistence should happen and\n\t  // get saved state from session storage if true (defaults to `false`)\n\t  var setPersist = function setPersist() {\n\t    shouldPersist = !(docElem.getAttribute('data-whatpersist') || document.body.getAttribute('data-whatpersist') === 'false');\n\n\t    if (shouldPersist) {\n\t      // check for session variables and use if available\n\t      try {\n\t        if (window.sessionStorage.getItem('what-input')) {\n\t          currentInput = window.sessionStorage.getItem('what-input');\n\t        }\n\n\t        if (window.sessionStorage.getItem('what-intent')) {\n\t          currentIntent = window.sessionStorage.getItem('what-intent');\n\t        }\n\t      } catch (e) {\n\t        // fail silently\n\t      }\n\t    }\n\n\t    // always run these so at least `initial` state is set\n\t    doUpdate('input');\n\t    doUpdate('intent');\n\t  };\n\n\t  // checks conditions before updating new input\n\t  var setInput = function setInput(event) {\n\t    var eventKey = event.which;\n\t    var value = inputMap[event.type];\n\n\t    if (value === 'pointer') {\n\t      value = pointerType(event);\n\t    }\n\n\t    var ignoreMatch = !specificMap.length && ignoreMap.indexOf(eventKey) === -1;\n\n\t    var specificMatch = specificMap.length && specificMap.indexOf(eventKey) !== -1;\n\n\t    var shouldUpdate = value === 'keyboard' && eventKey && (ignoreMatch || specificMatch) || value === 'mouse' || value === 'touch';\n\n\t    // prevent touch detection from being overridden by event execution order\n\t    if (validateTouch(value)) {\n\t      shouldUpdate = false;\n\t    }\n\n\t    if (shouldUpdate && currentInput !== value) {\n\t      currentInput = value;\n\n\t      persistInput('input', currentInput);\n\t      doUpdate('input');\n\t    }\n\n\t    if (shouldUpdate && currentIntent !== value) {\n\t      // preserve intent for keyboard interaction with form fields\n\t      var activeElem = document.activeElement;\n\t      var notFormInput = activeElem && activeElem.nodeName && (formInputs.indexOf(activeElem.nodeName.toLowerCase()) === -1 || activeElem.nodeName.toLowerCase() === 'button' && !checkClosest(activeElem, 'form'));\n\n\t      if (notFormInput) {\n\t        currentIntent = value;\n\n\t        persistInput('intent', currentIntent);\n\t        doUpdate('intent');\n\t      }\n\t    }\n\t  };\n\n\t  // updates the doc and `inputTypes` array with new input\n\t  var doUpdate = function doUpdate(which) {\n\t    docElem.setAttribute('data-what' + which, which === 'input' ? currentInput : currentIntent);\n\n\t    fireFunctions(which);\n\t  };\n\n\t  // updates input intent for `mousemove` and `pointermove`\n\t  var setIntent = function setIntent(event) {\n\t    var value = inputMap[event.type];\n\n\t    if (value === 'pointer') {\n\t      value = pointerType(event);\n\t    }\n\n\t    // test to see if `mousemove` happened relative to the screen to detect scrolling versus mousemove\n\t    detectScrolling(event);\n\n\t    // only execute if scrolling isn't happening\n\t    if ((!isScrolling && !validateTouch(value) || isScrolling && event.type === 'wheel' || event.type === 'mousewheel' || event.type === 'DOMMouseScroll') && currentIntent !== value) {\n\t      currentIntent = value;\n\n\t      persistInput('intent', currentIntent);\n\t      doUpdate('intent');\n\t    }\n\t  };\n\n\t  var setElement = function setElement(event) {\n\t    if (!event.target.nodeName) {\n\t      // If nodeName is undefined, clear the element\n\t      // This can happen if click inside an <svg> element.\n\t      clearElement();\n\t      return;\n\t    }\n\n\t    currentElement = event.target.nodeName.toLowerCase();\n\t    docElem.setAttribute('data-whatelement', currentElement);\n\n\t    if (event.target.classList && event.target.classList.length) {\n\t      docElem.setAttribute('data-whatclasses', event.target.classList.toString().replace(' ', ','));\n\t    }\n\t  };\n\n\t  var clearElement = function clearElement() {\n\t    currentElement = null;\n\n\t    docElem.removeAttribute('data-whatelement');\n\t    docElem.removeAttribute('data-whatclasses');\n\t  };\n\n\t  var persistInput = function persistInput(which, value) {\n\t    if (shouldPersist) {\n\t      try {\n\t        window.sessionStorage.setItem('what-' + which, value);\n\t      } catch (e) {\n\t        // fail silently\n\t      }\n\t    }\n\t  };\n\n\t  /*\n\t   * utilities\n\t   */\n\n\t  var pointerType = function pointerType(event) {\n\t    if (typeof event.pointerType === 'number') {\n\t      return pointerMap[event.pointerType];\n\t    } else {\n\t      // treat pen like touch\n\t      return event.pointerType === 'pen' ? 'touch' : event.pointerType;\n\t    }\n\t  };\n\n\t  // prevent touch detection from being overridden by event execution order\n\t  var validateTouch = function validateTouch(value) {\n\t    var timestamp = Date.now();\n\n\t    var touchIsValid = value === 'mouse' && currentInput === 'touch' && timestamp - currentTimestamp < 200;\n\n\t    currentTimestamp = timestamp;\n\n\t    return touchIsValid;\n\t  };\n\n\t  // detect version of mouse wheel event to use\n\t  // via https://developer.mozilla.org/en-US/docs/Web/API/Element/wheel_event\n\t  var detectWheel = function detectWheel() {\n\t    var wheelType = null;\n\n\t    // Modern browsers support \"wheel\"\n\t    if ('onwheel' in document.createElement('div')) {\n\t      wheelType = 'wheel';\n\t    } else {\n\t      // Webkit and IE support at least \"mousewheel\"\n\t      // or assume that remaining browsers are older Firefox\n\t      wheelType = document.onmousewheel !== undefined ? 'mousewheel' : 'DOMMouseScroll';\n\t    }\n\n\t    return wheelType;\n\t  };\n\n\t  // runs callback functions\n\t  var fireFunctions = function fireFunctions(type) {\n\t    for (var i = 0, len = functionList.length; i < len; i++) {\n\t      if (functionList[i].type === type) {\n\t        functionList[i].fn.call(undefined, type === 'input' ? currentInput : currentIntent);\n\t      }\n\t    }\n\t  };\n\n\t  // finds matching element in an object\n\t  var objPos = function objPos(match) {\n\t    for (var i = 0, len = functionList.length; i < len; i++) {\n\t      if (functionList[i].fn === match) {\n\t        return i;\n\t      }\n\t    }\n\t  };\n\n\t  var detectScrolling = function detectScrolling(event) {\n\t    if (mousePos.x !== event.screenX || mousePos.y !== event.screenY) {\n\t      isScrolling = false;\n\n\t      mousePos.x = event.screenX;\n\t      mousePos.y = event.screenY;\n\t    } else {\n\t      isScrolling = true;\n\t    }\n\t  };\n\n\t  // manual version of `closest()`\n\t  var checkClosest = function checkClosest(elem, tag) {\n\t    var ElementPrototype = window.Element.prototype;\n\n\t    if (!ElementPrototype.matches) {\n\t      ElementPrototype.matches = ElementPrototype.msMatchesSelector || ElementPrototype.webkitMatchesSelector;\n\t    }\n\n\t    if (!ElementPrototype.closest) {\n\t      do {\n\t        if (elem.matches(tag)) {\n\t          return elem;\n\t        }\n\n\t        elem = elem.parentElement || elem.parentNode;\n\t      } while (elem !== null && elem.nodeType === 1);\n\n\t      return null;\n\t    } else {\n\t      return elem.closest(tag);\n\t    }\n\t  };\n\n\t  /*\n\t   * init\n\t   */\n\n\t  // don't start script unless browser cuts the mustard\n\t  // (also passes if polyfills are used)\n\t  if ('addEventListener' in window && Array.prototype.indexOf) {\n\t    setUp();\n\t  }\n\n\t  /*\n\t   * api\n\t   */\n\n\t  return {\n\t    // returns string: the current input type\n\t    // opt: 'intent'|'input'\n\t    // 'input' (default): returns the same value as the `data-whatinput` attribute\n\t    // 'intent': includes `data-whatintent` value if it's different than `data-whatinput`\n\t    ask: function ask(opt) {\n\t      return opt === 'intent' ? currentIntent : currentInput;\n\t    },\n\n\t    // returns string: the currently focused element or null\n\t    element: function element() {\n\t      return currentElement;\n\t    },\n\n\t    // overwrites ignored keys with provided array\n\t    ignoreKeys: function ignoreKeys(arr) {\n\t      ignoreMap = arr;\n\t    },\n\n\t    // overwrites specific char keys to update on\n\t    specificKeys: function specificKeys(arr) {\n\t      specificMap = arr;\n\t    },\n\n\t    // attach functions to input and intent \"events\"\n\t    // funct: function to fire on change\n\t    // eventType: 'input'|'intent'\n\t    registerOnChange: function registerOnChange(fn, eventType) {\n\t      functionList.push({\n\t        fn: fn,\n\t        type: eventType || 'input'\n\t      });\n\t    },\n\n\t    unRegisterOnChange: function unRegisterOnChange(fn) {\n\t      var position = objPos(fn);\n\n\t      if (position || position === 0) {\n\t        functionList.splice(position, 1);\n\t      }\n\t    },\n\n\t    clearStorage: function clearStorage() {\n\t      window.sessionStorage.clear();\n\t    }\n\t  };\n\t}();\n\n/***/ })\n/******/ ])\n});\n;\n\n//# sourceURL=webpack:///./content/themes/annastiina/node_modules/what-input/dist/what-input.js?")},"./node_modules/webpack/buildin/amd-options.js":function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n\n/* WEBPACK VAR INJECTION */}.call(this, {}))\n\n//# sourceURL=webpack:///(webpack)/buildin/amd-options.js?")},"./node_modules/webpack/buildin/harmony-module.js":function(module,exports){eval('module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "exports", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?')},1:function(module,exports,__webpack_require__){eval('module.exports = __webpack_require__(/*! /Users/rolle/Projects/pulina/content/themes/annastiina/js/src/front-end.js */"./content/themes/annastiina/js/src/front-end.js");\n\n\n//# sourceURL=webpack:///multi_./content/themes/annastiina/js/src/front-end.js?')}});