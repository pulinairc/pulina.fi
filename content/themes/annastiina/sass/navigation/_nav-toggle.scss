// Settings for jonsuh/hamburgers
$color-background-nav-mobile-header: $color-main;
$color-background-nav-mobile-layer: $color-main;
$color-hamburger-active: choose-contrast-color($color-background-nav-mobile-header);
$color-hamburger: choose-contrast-color($color-background-nav-mobile-header);
$hamburger-padding-x: 1.5rem;
$hamburger-padding-y: 4rem;
$hamburger-layer-width: 3.5rem;
$hamburger-layer-height: .3rem;
$hamburger-layer-spacing: .6rem;
$hamburger-layer-color: $color-hamburger;
$hamburger-layer-border-radius: 4px;
$hamburger-hover-opacity: .8;
$hamburger-hover-transition-duration: .15s;
$hamburger-hover-transition-timing-function: linear;
$nav-open-from-direction: top;

/* stylelint-disable declaration-no-important, selector-max-specificity, selector-max-class */
#page {
  transition: transform 400ms ease !important;
}

// CSS variables
// These can be adjusted with media queries for in-between breakpoints
:root {
  // Main level CSS vars
  --font-size-main-level-mobile: 17px;
  --font-size-sub-menu-mobile: 17px;

  // Sub menu CSS vars
  --padding-sub-menu-vertical-mobile: 1.2rem;
  --padding-sub-menu-horizontal-mobile: 2.5rem;
  --margin-left-sub-menu: 2rem;
}

// Init Tasty Hamburger navigation toggle
@import 'hamburgers/hamburgers';

// Init hamburger animation
// Choose from animations: https://jonsuh.com/hamburgers/
.hamburger {
  @extend .hamburger--3dx;
}

// Nav toggle settings
// Hamburger menu icon specific
.hamburger.toggle-open .hamburger-inner,
.hamburger.toggle-open .hamburger-inner::before,
.hamburger.toggle-open .hamburger-inner::after {
  background-color: $color-hamburger-active;
  color: $color-hamburger-active;
}

.nav-toggle {
  background-color: transparent;
  border: 0;
  color: $color-hamburger;
  cursor: pointer;
  font-weight: 700;
  margin: 0;
  min-height: 0;
  overflow: visible;
  padding: 0;
  position: absolute;
  right: 3rem;
  text-decoration: none;
  top: 3rem;
  user-select: none;
  width: auto;
  z-index: 100000;

  // Modern stuff (::after is first line, without ::after is first)
  &:not(.toggle-open) .hamburger-inner::after {
    transition: width $transition-duration;
    width: 18px;
  }

  &.toggle-open .hamburger-inner::after,
  &:hover .hamburger-inner::after,
  &:focus .hamburger-inner::after {
    width: $hamburger-layer-width;
  }

  span {
    color: $color-hamburger;
    font-size: 1.2em;
  }

  &.toggle-open span {
    color: $color-hamburger-active;
  }

  &:hover,
  &:active {
    color: $color-hamburger;

    span {
      color: $color-hamburger;
    }
  }

  // Alternative focus for mobile nav
  &:focus {
    span span {
      background-color: $color-hamburger;
    }

    span span::before,
    span span::after {
      background-color: $color-hamburger;
    }
  }

  // We already have aria-label for button
  // But we want to show nav-toggle visually for seeing users
  // So we'll add has-visible-label to nav-toggle in header.php
  /* stylelint-disable a11y/no-display-none */
  &:not(.has-visible-label) .nav-toggle-label {
    display: none;
  }

  @media (max-width: $width-max-mobile - 1px) {
    display: block;

    &.has-visible-label {
      align-items: center;
      display: flex;
    }

    &.has-visible-label .nav-toggle-label {
      font-size: var(--font-size-nav-toggle-label);

      // Hide on smallest phones
      @media (max-width: 410px) {
        display: none;
      }
    }

    @media (min-width: 411px) {
      .hamburger-box {
        margin-right: 2rem;
      }
    }
  }

  // Separate active colors for opened state
  &.toggle-open {
    color: $color-hamburger-active;
  }

  &.toggle-open .hamburger-box {
    .hamburger-inner {
      background-color: $color-hamburger-active;
    }

    .hamburger-inner::after {
      background-color: $color-hamburger-active;
    }
  }

  &.toggle-open .focus,
  &.toggle-open span:focus {
    .hamburger-inner {
      background-color: $color-hamburger-active;
    }

    .hamburger-inner::after {
      background-color: $color-hamburger-active;
    }
  }

  &.toggle-open span:focus,
  &.toggle-open span:hover,
  &.toggle-open span:active {
    color: $color-hamburger-active;

    span {
      color: $color-hamburger-active;
    }
  }
}
